{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/fps.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/assets.js", "../code/main.js"],
  "sourcesContent": ["export class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport function downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nexport function downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport function isDataURL(str: string) {\n\treturn str.match(/^data:\\w+\\/\\w+;base64,.+/);\n}\n\nexport const uid = (() => {\n\tlet id = 0;\n\treturn () => id++;\n})();\n\nconst warned = new Set();\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\tif (!warned.has(oldName)) {\n\t\twarned.add(oldName);\n\t\tconsole.warn(`${oldName} is deprecated. Use ${newName} instead.`);\n\t}\n}\n\nexport const deprecate = (oldName: string, newName: string, newFunc: (...args) => any) => (...args) => {\n\tdeprecateMsg(oldName, newName);\n\treturn newFunc(...args);\n};\n", "import {\n\tVec4,\n\tPoint,\n\tPolygon,\n\tArea,\n} from \"./types\";\n\nimport {\n\tdeprecateMsg,\n} from \"./utils\";\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nexport function lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nexport class Vec2 {\n\tx: number = 0;\n\ty: number = 0;\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg);\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle));\n\t}\n\tstatic LEFT = new Vec2(-1, 0);\n\tstatic RIGHT = new Vec2(1, 0);\n\tstatic UP = new Vec2(0, -1);\n\tstatic DOWN = new Vec2(0, 1);\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y);\n\t}\n\tadd(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y);\n\t}\n\tsub(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y);\n\t}\n\tscale(...args): Vec2 {\n\t\tconst s = vec2(...args);\n\t\treturn new Vec2(this.x * s.x, this.y * s.y);\n\t}\n\tdist(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn Math.sqrt(\n\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t);\n\t}\n\tlen(): number {\n\t\treturn this.dist(new Vec2(0, 0));\n\t}\n\tunit(): Vec2 {\n\t\treturn this.scale(1 / this.len());\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x);\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y;\n\t}\n\tangle(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t}\n\tlerp(p2: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y;\n\t}\n\ttoString(): string {\n\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t}\n\tstr(): string {\n\t\treturn this.toString();\n\t}\n}\n\nexport function vec2(...args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\treturn new Vec2(...args);\n}\n\nexport class Vec3 {\n\tx: number = 0;\n\ty: number = 0;\n\tz: number = 0;\n\tconstructor(x: number, y: number, z: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\txy() {\n\t\treturn vec2(this.x, this.y);\n\t}\n}\n\nexport const vec3 = (x, y, z) => new Vec3(x, y, z);\n\nexport class Color {\n\n\tr: number = 255;\n\tg: number = 255;\n\tb: number = 255;\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255);\n\t\tthis.g = clamp(g, 0, 255);\n\t\tthis.b = clamp(b, 0, 255);\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic RED = rgb(255, 0, 0);\n\tstatic GREEN = rgb(0, 255, 0);\n\tstatic BLUE = rgb(0, 0, 255);\n\tstatic YELLOW = rgb(255, 255, 0);\n\tstatic MAGENTA = rgb(255, 0, 255);\n\tstatic CYAN = rgb(0, 255, 255);\n\tstatic WHITE = rgb(255, 255, 255);\n\tstatic BLACK = rgb(0, 0, 0);\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b);\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a);\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a);\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b);\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t);\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\t\t\t;\n\t}\n\n\tstr(): string {\n\t\tdeprecateMsg(\"str()\", \"toString()\");\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\ttoString(): string {\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tconst p = 2 * l - q;\n\t\tconst r = hue2rgb(p, q, h + 1 / 3);\n\t\tconst g = hue2rgb(p, q, h);\n\t\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone();\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0]);\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args);\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l);\n\nexport class Quad {\n\tx: number = 0;\n\ty: number = 0;\n\tw: number = 1;\n\th: number = 1;\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.w = w;\n\t\tthis.h = h;\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h\n\t\t);\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h);\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h;\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h);\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t];\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m;\n\t\t}\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4(this.m);\n\t};\n\n\tmult(other: Mat4): Mat4 {\n\n\t\tconst out = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\tmultVec4(p: Vec4): Vec4 {\n\t\treturn {\n\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t};\n\t}\n\n\tmultVec3(p: Vec3): Vec3 {\n\t\tconst p4 = this.multVec4({\n\t\t\tx: p.x,\n\t\t\ty: p.y,\n\t\t\tz: p.z,\n\t\t\tw: 1.0,\n\t\t});\n\t\treturn vec3(p4.x, p4.y, p4.z);\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t);\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\ttranslate(p: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.translate(p));\n\t}\n\n\tscale(s: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.scale(s));\n\t}\n\n\trotateX(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateX(a));\n\t}\n\n\trotateY(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateY(a));\n\t}\n\n\trotateZ(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateZ(a));\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = [];\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString();\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\nexport class RNG {\n\tseed: number;\n\tconstructor(seed: number) {\n\t\tthis.seed = seed;\n\t}\n\tgen(...args) {\n\t\tif (args.length === 0) {\n\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\treturn this.seed / M;\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn vec2(\n\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t);\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn rgb(\n\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function rng(seed: number): RNG {\n\tdeprecateMsg(\"rng()\", \"new RNG()\");\n\treturn new RNG(seed);\n}\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, new Line(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, new Line(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.p1.x, Math.min(c.center.x, r.p2.x));\n\tconst ny = Math.max(r.p1.y, Math.min(c.center.y, r.p2.y));\n\tconst nearestPoint = vec2(nx, ny);\n\treturn nearestPoint.dist(c.center) <= c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nexport function testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet c = false;\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c;\n\t\t}\n\t}\n\n\treturn c;\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nexport function testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nexport function minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nexport class Line {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Rect {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2;\n\tradius: number;\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\t}\n}\n", "export default class FPSCounter {\n\n\tprivate buf: number[] = [];\n\tprivate timer: number = 0;\n\tfps: number = 0;\n\n\ttick(dt: number) {\n\n\t\tthis.buf.push(1 / dt);\n\t\tthis.timer += dt;\n\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0;\n\t\t\tthis.fps = Math.round(this.buf.reduce((a, b) => a + b) / this.buf.length);\n\t\t\tthis.buf = [];\n\t\t}\n\n\t}\n\n}\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time;\n\t\tthis.action = action;\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false;\n\t\tthis.time -= dt;\n\t\tif (this.time <= 0) {\n\t\t\tthis.action();\n\t\t\tthis.finished = true;\n\t\t\tthis.time = 0;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treset(time) {\n\t\tthis.time = time;\n\t\tthis.finished = false;\n\t}\n\n}\n", "import {\n\tvec2,\n\tvec3,\n\tVec3,\n\tRect,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n\tuid,\n\tdeprecate,\n\tdeprecateMsg,\n\tisDataURL,\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tGfxShader,\n\tGfxFont,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tCharTransformFunc,\n\tTexWrap,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tGfxTexData,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOutviewCompOpt,\n\tOutviewComp,\n\tCleanupCompOpt,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n\tKaboom,\n} from \"./types\";\n\nimport FPSCounter from \"./fps\";\nimport Timer from \"./timer\";\n\n// @ts-ignore\nimport apl386Src from \"./assets/apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./assets/apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./assets/sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./assets/sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./assets/bean.png\";\n// @ts-ignore\nimport burpBytes from \"./assets/burp.mp3\";\n// @ts-ignore\nimport kaSrc from \"./assets/ka.png\";\n// @ts-ignore\nimport boomSrc from \"./assets/boom.png\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\n// translate these key names to a simpler version\nconst KEY_ALIAS = {\n\t\"ArrowLeft\": \"left\",\n\t\"ArrowRight\": \"right\",\n\t\"ArrowUp\": \"up\",\n\t\"ArrowDown\": \"down\",\n\t\" \": \"space\",\n};\n\n// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_BUTTONS = [\n\t\"left\",\n\t\"middle\",\n\t\"right\",\n\t\"back\",\n\t\"forward\",\n];\n\n// don't trigger browser default event when these keys are pressed\nconst PREVENT_DEFAULT_KEYS = [\n\t\"space\",\n\t\"left\",\n\t\"right\",\n\t\"up\",\n\t\"down\",\n\t\"tab\",\n\t\"f1\",\n\t\"f2\",\n\t\"f3\",\n\t\"f4\",\n\t\"f5\",\n\t\"f6\",\n\t\"f7\",\n\t\"f8\",\n\t\"f9\",\n\t\"f10\",\n\t\"f11\",\n\t\"s\",\n];\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" \u263A\u263B\u2665\u2666\u2663\u2660\u2022\u25D8\u25CB\u25D9\u2642\u2640\u266A\u266B\u263C\u25BA\u25C4\u2195\u203C\u00B6\u00A7\u25AC\u21A8\u2191\u2193\u2192\u2190\u221F\u2194\u25B2\u25BC !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\";\n\n// audio gain range\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\n\n// audio speed range\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\n\n// audio detune range\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nconst DEF_ORIGIN = \"topleft\";\nconst DEF_GRAVITY = 1600;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\n// vertex format stride (vec3 pos, vec2 uv, vec4 color)\nconst STRIDE = 9;\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\n// transform the button state to the next state\n// e.g. a button might become \"pressed\" one frame, and it should become \"down\" next frame\nfunction processButtonState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\n// wrappers around full screen functions to work across browsers\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\n// convert origin string to a vec2 offset\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction createEmptyAudioBuffer() {\n\treturn new AudioBuffer({\n\t\tlength: 1,\n\t\tnumberOfChannels: 1,\n\t\tsampleRate: 44100\n\t});\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst app = (() => {\n\n\tconst root = gopt.root ?? document.body;\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\troot.appendChild(canvas);\n\t\treturn canvas;\n\t})();\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1;\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox) {\n\t\tcanvas.width = gopt.width * gscale;\n\t\tcanvas.height = gopt.height * gscale;\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth;\n\t\tcanvas.height = canvas.parentElement.offsetHeight;\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// TODO: .style is supposed to be readonly? alternative?\n\t// @ts-ignore\n\tcanvas.style = styles.join(\";\");\n\n\t// make canvas focusable\n\tcanvas.setAttribute(\"tabindex\", \"0\");\n\n\t// create webgl context\n\tconst gl = canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\treturn {\n\n\t\tcanvas: canvas,\n\t\tscale: gscale,\n\t\tgl: gl,\n\n\t\t// keep track of all button states\n\t\tkeyStates: {} as Record<Key, ButtonState>,\n\t\tmouseStates: {} as Record<MouseButton, ButtonState>,\n\n\t\t// input states from last frame, should reset every frame\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tisKeyReleased: false,\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\n\t\t// total time elapsed\n\t\ttime: 0,\n\t\t// real total time elapsed (including paused time)\n\t\trealTime: 0,\n\t\t// if we should skip next dt, to prevent the massive dt surge if user switch to another tab for a while and comeback\n\t\tskipTime: false,\n\t\t// how much time last frame took\n\t\tdt: 0.0,\n\t\t// total frames elapsed\n\t\tnumFrames: 0,\n\n\t\t// if we're on a touch device\n\t\tisTouch: (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0,\n\n\t\t// requestAnimationFrame id\n\t\tloopID: null,\n\t\t// if our game loop is currently stopped / paused\n\t\tstopped: false,\n\t\tpaused: false,\n\n\t\t// TODO: take fps counter out pure\n\t\tfpsCounter: new FPSCounter(),\n\n\t\t// if we finished loading all assets\n\t\tloaded: false,\n\n\t};\n\n})();\n\nconst gfx = (() => {\n\n\tconst gl = app.gl;\n\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\n\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\tconst emptyTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t);\n\n\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\tif (gopt.background) {\n\t\tconst c = Color.fromArray(gopt.background);\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, gopt.background[3] ?? 1);\n\t}\n\n\tgl.enable(gl.BLEND);\n\tgl.enable(gl.SCISSOR_TEST);\n\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t// we only use one vertex and index buffer that batches all draw calls\n\tconst vbuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t// vec3 pos\n\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\tgl.enableVertexAttribArray(0);\n\t// vec2 uv\n\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\tgl.enableVertexAttribArray(1);\n\t// vec4 color\n\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\tgl.enableVertexAttribArray(2);\n\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\tconst ibuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t// a checkerboard texture used for the default background\n\tconst bgTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t128, 128, 128, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t128, 128, 128, 255,\n\t\t]), 2, 2), {\n\t\t\twrap: \"repeat\",\n\t\t\tfilter: \"nearest\",\n\t\t},\n\t);\n\n\treturn {\n\n\t\t// keep track of how many draw calls we're doing this frame\n\t\tdrawCalls: 0,\n\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\tlastDrawCalls: 0,\n\n\t\t// gfx states\n\t\tdefShader: defShader,\n\t\tcurShader: defShader,\n\t\tdefTex: emptyTex,\n\t\tcurTex: emptyTex,\n\t\tcurUniform: {},\n\t\tvbuf: vbuf,\n\t\tibuf: ibuf,\n\n\t\t// local vertex / index buffer queue\n\t\tvqueue: [],\n\t\tiqueue: [],\n\n\t\ttransform: new Mat4(),\n\t\ttransformStack: [],\n\n\t\tbgTex: bgTex,\n\n\t\twidth: gopt.width,\n\t\theight: gopt.height,\n\n\t\tviewport: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: gl.drawingBufferWidth,\n\t\t\theight: gl.drawingBufferHeight,\n\t\t},\n\n\t};\n\n})();\n\nupdateViewport();\n\nconst audio = (() => {\n\n\t// TODO: handle when audio context is unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\tconst burpSnd = {\n\t\tbuf: createEmptyAudioBuffer(),\n\t};\n\n\t// load that burp sound\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"Failed to load burp.\")\n\t});\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tburpSnd,\n\t};\n\n})();\n\nconst assets = {\n\n\t// keep track of how many assets are loading / loaded, for calculaating progress\n\tnumLoading: 0,\n\tnumLoaded: 0,\n\n\t// prefix for when loading from a url\n\turlPrefix: \"\",\n\n\t// asset holders\n\tsprites: {},\n\tsounds: {},\n\tshaders: {},\n\tfonts: {},\n\n};\n\nconst game = {\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// root game object\n\t// these transforms are used as camera\n\troot: make([]),\n\n\ttimers: new IDList<Timer>(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\tscenes: {},\n\n\t// on screen log\n\tlogs: [],\n\n\t// camera\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t\ttransform: new Mat4(),\n\t},\n\n}\n\n// wrap individual loaders with global loader counter, for stuff like progress bar\nfunction load<T>(prom: Promise<T>): Promise<T> {\n\n\tassets.numLoading++;\n\n\t// wrapping another layer of promise because we are catching errors here internally and we also want users be able to catch errors, however only one catch is allowed per promise chain\n\treturn new Promise((resolve, reject) => {\n\t\tprom\n\t\t\t.then(resolve)\n\t\t\t.catch((err) => {\n\t\t\t\tdebug.error(err);\n\t\t\t\treject(err);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tassets.numLoading--;\n\t\t\t\tassets.numLoaded++;\n\t\t\t});\n\t}) as Promise<T>;\n\n}\n\n// get current load progress\nfunction loadProgress(): number {\n\treturn assets.numLoaded / (assets.numLoading + assets.numLoaded);\n}\n\n// global load path prefix\nfunction loadRoot(path?: string): string {\n\tif (path !== undefined) {\n\t\tassets.urlPrefix = path;\n\t}\n\treturn assets.urlPrefix;\n}\n\n// wrapper around fetch() that applies urlPrefix and basic error handling\nfunction fetchURL(path: string) {\n\tconst url = assets.urlPrefix + path;\n\treturn fetch(url)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch ${url}`);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\n// wrapper around image loader to get a Promise\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = isDataURL(src) ? src : assets.urlPrefix + src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => resolve(img);\n\t\t// TODO: truncate for long dataurl src\n\t\timg.onerror = () => reject(`Failed to load image from \"${src}\"`);\n\t});\n}\n\n// TODO: support SpriteLoadSrc\nfunction loadFont(\n\tname: string | null,\n\tsrc: string,\n\tgw: number,\n\tgh: number,\n\topt: FontLoadOpt = {},\n): Promise<FontData> {\n\treturn load(loadImg(src)\n\t\t.then((img) => {\n\t\t\tconst font = makeFont(\n\t\t\t\tmakeTex(img, opt),\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t\topt.chars ?? ASCII_CHARS\n\t\t\t);\n\t\t\tif (name) {\n\t\t\t\tassets.fonts[name] = font;\n\t\t\t}\n\t\t\treturn font;\n\t\t})\n\t);\n}\n\nfunction getSprite(name: string): SpriteData | null {\n\treturn assets.sprites[name] ?? null;\n}\n\nfunction getSound(name: string): SoundData | null {\n\treturn assets.sounds[name] ?? null;\n}\n\nfunction getFont(name: string): FontData | null {\n\treturn assets.fonts[name] ?? null;\n}\n\nfunction getShader(name: string): ShaderData | null {\n\treturn assets.shaders[name] ?? null;\n}\n\n// get an array of frames based on configuration on how to slice the image\nfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\tconst frames = [];\n\tconst qw = w / x;\n\tconst qh = h / y;\n\tfor (let j = 0; j < y; j++) {\n\t\tfor (let i = 0; i < x; i++) {\n\t\t\tframes.push(new Quad(\n\t\t\t\tdx + i * qw,\n\t\t\t\tdy + j * qh,\n\t\t\t\tqw,\n\t\t\t\tqh,\n\t\t\t));\n\t\t}\n\t}\n\treturn frames;\n}\n\nfunction loadSpriteAtlas(\n\tsrc: SpriteLoadSrc,\n\tdata: SpriteAtlasData | string\n): Promise<Record<string, SpriteData>> {\n\tif (typeof data === \"string\") {\n\t\t// TODO: this adds a new loader asyncly\n\t\treturn load(fetchURL(data)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t}\n\treturn load(loadSprite(null, src).then((atlas) => {\n\t\tconst map = {};\n\t\tconst w = atlas.tex.width;\n\t\tconst h = atlas.tex.height;\n\t\tfor (const name in data) {\n\t\t\tconst info = data[name];\n\t\t\tconst spr = {\n\t\t\t\ttex: atlas.tex,\n\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\tanims: info.anims,\n\t\t\t}\n\t\t\tassets.sprites[name] = spr;\n\t\t\tmap[name] = spr;\n\t\t}\n\t\treturn map;\n\t}));\n}\n\n// synchronously load sprite from local pixel data\nfunction loadRawSprite(\n\tname: string | null,\n\tsrc: GfxTexData,\n\topt: SpriteLoadOpt = {}\n) {\n\n\tconst tex = makeTex(src, opt);\n\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\tconst sprite = {\n\t\ttex: tex,\n\t\tframes: frames,\n\t\tanims: opt.anims || {},\n\t};\n\n\tif (name) {\n\t\tassets.sprites[name] = sprite;\n\t}\n\n\treturn sprite;\n\n}\n\n// load a sprite to asset manager\nfunction loadSprite(\n\tname: string | null,\n\tsrc: SpriteLoadSrc,\n\topt: SpriteLoadOpt = {\n\t\tsliceX: 1,\n\t\tsliceY: 1,\n\t\tanims: {},\n\t},\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`Expected sprite src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tloadImg(src)\n\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tfetchURL(src)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (data) => {\n\n\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = data.width;\n\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t});\n\n\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\tanims: data.anims,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t;\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadAseprite(\n\tname: string | null,\n\timgSrc: SpriteLoadSrc,\n\tjsonSrc: string\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tloadSprite(name, imgSrc)\n\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\tfetchURL(jsonSrc)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\treturn new Quad(\n\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject)\n\t\t\t\t\t;\n\t\t\t})\n\t\t\t.catch(reject);\n\n\t}));\n\n}\n\nfunction loadShader(\n\tname: string | null,\n\tvert?: string,\n\tfrag?: string,\n\tisUrl: boolean = false,\n): Promise<ShaderData> {\n\n\tfunction loadRawShader(\n\t\tname: string | null,\n\t\tvert: string | null,\n\t\tfrag: string | null,\n\t): ShaderData {\n\t\tconst shader = makeShader(vert, frag);\n\t\tif (name) {\n\t\t\tassets.shaders[name] = shader;\n\t\t}\n\t\treturn shader;\n\t}\n\n\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\tif (!vert && !frag) {\n\t\t\treturn reject(\"no shader\");\n\t\t}\n\n\t\tfunction resolveUrl(url?: string) {\n\t\t\treturn url ?\n\t\t\t\tfetchURL(url)\n\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t.catch(reject)\n\t\t\t\t: new Promise((r) => r(null));\n\t\t}\n\n\t\tif (isUrl) {\n\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept dataurl\n// load a sound to asset manager\nfunction loadSound(\n\tname: string | null,\n\tsrc: string,\n): Promise<SoundData> {\n\n\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tfetchURL(src)\n\t\t\t\t.then((res) => res.arrayBuffer())\n\t\t\t\t.then((data) => {\n\t\t\t\t\treturn new Promise((resolve2, reject2) =>\n\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\tconst snd = {\n\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t}\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(snd);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}\n\n\t}));\n\n}\n\nfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\treturn loadSprite(name, beanSrc);\n}\n\n// get / set master volume\nfunction volume(v?: number): number {\n\tif (v !== undefined) {\n\t\taudio.masterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t}\n\treturn audio.masterNode.gain.value;\n}\n\n// plays a sound, returns a control handle\nfunction play(\n\tsrc: SoundData | string,\n\topt: AudioPlayOpt = {\n\t\tloop: false,\n\t\tvolume: 1,\n\t\tspeed: 1,\n\t\tdetune: 0,\n\t\tseek: 0,\n\t},\n): AudioPlay {\n\n\t// TODO: clean?\n\tif (typeof src === \"string\") {\n\n\t\tconst pb = play({\n\t\t\tbuf: createEmptyAudioBuffer(),\n\t\t});\n\n\t\tonLoad(() => {\n\t\t\tconst snd = assets.sounds[src];\n\t\t\tif (!snd) {\n\t\t\t\tthrow new Error(`Sound not found: \"${src}\"`);\n\t\t\t}\n\t\t\tconst pb2 = play(snd, opt);\n\t\t\tfor (const k in pb2) {\n\t\t\t\tpb[k] = pb2[k];\n\t\t\t}\n\t\t});\n\n\t\treturn pb;\n\n\t}\n\n\tconst ctx = audio.ctx;\n\tlet stopped = false;\n\tlet srcNode = ctx.createBufferSource();\n\n\tsrcNode.buffer = src.buf;\n\tsrcNode.loop = opt.loop ? true : false;\n\n\tconst gainNode = ctx.createGain();\n\n\tsrcNode.connect(gainNode);\n\tgainNode.connect(audio.masterNode);\n\n\tconst pos = opt.seek ?? 0;\n\n\tsrcNode.start(0, pos);\n\n\tlet startTime = ctx.currentTime - pos;\n\tlet stopTime: number | null = null;\n\n\tconst handle = {\n\n\t\tstop() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pause();\n\t\t\tstartTime = ctx.currentTime;\n\t\t},\n\n\t\tplay(seek?: number) {\n\n\t\t\tif (!stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldNode = srcNode;\n\n\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\tif (srcNode.detune) {\n\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t}\n\n\t\t\tsrcNode.connect(gainNode);\n\n\t\t\tconst pos = seek ?? this.time();\n\n\t\t\tsrcNode.start(0, pos);\n\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\tstopped = false;\n\t\t\tstopTime = null;\n\n\t\t},\n\n\t\tpause() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsrcNode.stop();\n\t\t\tstopped = true;\n\t\t\tstopTime = ctx.currentTime;\n\t\t},\n\n\t\tisPaused(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tpaused(): boolean {\n\t\t\tdeprecateMsg(\"paused()\", \"isPaused()\");\n\t\t\treturn this.isPaused();\n\t\t},\n\n\t\tisStopped(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tstopped(): boolean {\n\t\t\tdeprecateMsg(\"stopped()\", \"isStopped()\");\n\t\t\treturn this.isStopped();\n\t\t},\n\n\t\t// TODO: affect time()\n\t\tspeed(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t}\n\t\t\treturn srcNode.playbackRate.value;\n\t\t},\n\n\t\tdetune(val?: number): number {\n\t\t\tif (!srcNode.detune) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t}\n\t\t\treturn srcNode.detune.value;\n\t\t},\n\n\t\tvolume(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t}\n\t\t\treturn gainNode.gain.value;\n\t\t},\n\n\t\tloop() {\n\t\t\tsrcNode.loop = true;\n\t\t},\n\n\t\tunloop() {\n\t\t\tsrcNode.loop = false;\n\t\t},\n\n\t\tduration(): number {\n\t\t\treturn src.buf.duration;\n\t\t},\n\n\t\ttime(): number {\n\t\t\tif (stopped) {\n\t\t\t\treturn stopTime - startTime;\n\t\t\t} else {\n\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t}\n\t\t},\n\n\t};\n\n\thandle.speed(opt.speed);\n\thandle.detune(opt.detune);\n\thandle.volume(opt.volume);\n\n\treturn handle;\n\n}\n\n// core kaboom logic\nfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\treturn play(audio.burpSnd, opt);\n}\n\n// TODO: take these webgl structures out pure\nfunction makeTex(\n\tdata: GfxTexData,\n\topt: GfxTexOpt = {}\n): GfxTexture {\n\n\tconst gl = app.gl;\n\tconst id = gl.createTexture();\n\n\tgl.bindTexture(gl.TEXTURE_2D, id);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\tconst filter = (() => {\n\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst wrap = (() => {\n\t\tswitch (opt.wrap) {\n\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t}\n\t})();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\treturn {\n\t\twidth: data.width,\n\t\theight: data.height,\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t},\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t},\n\t};\n\n}\n\nfunction makeShader(\n\tvertSrc: string | null = DEF_VERT,\n\tfragSrc: string | null = DEF_FRAG,\n): GfxShader {\n\n\tconst gl = app.gl;\n\tlet msg;\n\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\tgl.shaderSource(vertShader, vcode);\n\tgl.shaderSource(fragShader, fcode);\n\tgl.compileShader(vertShader);\n\tgl.compileShader(fragShader);\n\n\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tconst id = gl.createProgram();\n\n\tgl.attachShader(id, vertShader);\n\tgl.attachShader(id, fragShader);\n\n\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\tgl.linkProgram(id);\n\n\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\tif (msg !== \"\\n\") {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tbind() {\n\t\t\tgl.useProgram(id);\n\t\t},\n\n\t\tunbind() {\n\t\t\tgl.useProgram(null);\n\t\t},\n\n\t\tsend(uniform: Uniform) {\n\t\t\tthis.bind();\n\t\t\tfor (const name in uniform) {\n\t\t\t\tconst val = uniform[name];\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t} else if (val instanceof Vec3) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.unbind();\n\t\t},\n\n\t};\n\n}\n\nfunction makeFont(\n\ttex: GfxTexture,\n\tgw: number,\n\tgh: number,\n\tchars: string,\n): GfxFont {\n\n\tconst cols = tex.width / gw;\n\tconst rows = tex.height / gh;\n\tconst qw = 1.0 / cols;\n\tconst qh = 1.0 / rows;\n\tconst map: Record<string, Vec2> = {};\n\tconst charMap = chars.split(\"\").entries();\n\n\tfor (const [i, ch] of charMap) {\n\t\tmap[ch] = vec2(\n\t\t\t(i % cols) * qw,\n\t\t\tMath.floor(i / cols) * qh,\n\t\t);\n\t}\n\n\treturn {\n\t\ttex: tex,\n\t\tmap: map,\n\t\tqw: qw,\n\t\tqh: qh,\n\t};\n\n}\n\n// TODO: expose\nfunction drawRaw(\n\tverts: Vertex[],\n\tindices: number[],\n\tfixed: boolean,\n\ttex: GfxTexture = gfx.defTex,\n\tshader: GfxShader = gfx.defShader,\n\tuniform: Uniform = {},\n) {\n\n\ttex = tex ?? gfx.defTex;\n\tshader = shader ?? gfx.defShader;\n\n\t// flush on texture / shader change and overflow\n\tif (\n\t\ttex !== gfx.curTex\n\t\t|| shader !== gfx.curShader\n\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t) {\n\t\tflush();\n\t}\n\n\tfor (const v of verts) {\n\n\t\t// TODO: cache camTransform * gfxTransform?\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform);\n\n\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\tconst pt = screen2ndc(transform.multVec2(v.pos.xy()));\n\n\t\tgfx.vqueue.push(\n\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\tv.uv.x, v.uv.y,\n\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t);\n\n\t}\n\n\tfor (const i of indices) {\n\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length);\n\t}\n\n\tgfx.curTex = tex;\n\tgfx.curShader = shader;\n\tgfx.curUniform = uniform;\n\n}\n\n// draw all batched shapes\nfunction flush() {\n\n\tif (\n\t\t!gfx.curTex\n\t\t|| !gfx.curShader\n\t\t|| gfx.vqueue.length === 0\n\t\t|| gfx.iqueue.length === 0\n\t) {\n\t\treturn;\n\t}\n\n\tconst gl = app.gl;\n\n\tgfx.curShader.send(gfx.curUniform);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\tgfx.curShader.bind();\n\tgfx.curTex.bind();\n\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\tgfx.curTex.unbind();\n\tgfx.curShader.unbind();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\tgfx.iqueue = [];\n\tgfx.vqueue = [];\n\n\tgfx.drawCalls++;\n\n}\n\n// start a rendering frame, reset some states\nfunction frameStart() {\n\n\tapp.gl.clear(app.gl.COLOR_BUFFER_BIT);\n\n\tif (!gopt.background) {\n\t\tdrawUVQuad({\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tquad: new Quad(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\twidth() * app.scale / BG_GRID_SIZE,\n\t\t\t\theight() * app.scale / BG_GRID_SIZE,\n\t\t\t),\n\t\t\ttex: gfx.bgTex,\n\t\t\tfixed: true,\n\t\t})\n\t}\n\n\tgfx.drawCalls = 0;\n\tgfx.transformStack = [];\n\tgfx.transform = new Mat4();\n\n}\n\nfunction frameEnd() {\n\tflush();\n\tgfx.lastDrawCalls = gfx.drawCalls;\n}\n\nfunction drawCalls() {\n\treturn gfx.lastDrawCalls;\n}\n\n// convert a screen space coordinate to webgl normalized device coordinate\nfunction screen2ndc(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\tpt.x / width() * 2 - 1,\n\t\t-pt.y / height() * 2 + 1,\n\t);\n}\n\n// convert a webgl normalied device coordinate to screen space coordinate\nfunction ndc2screen(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\t(pt.x + 1) / 2 * width(),\n\t\t-(pt.y - 1) / 2 * height(),\n\t);\n}\n\nfunction applyMatrix(m: Mat4) {\n\tgfx.transform = m.clone();\n}\n\nfunction pushTranslate(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 0 && p.y === 0) return;\n\tgfx.transform = gfx.transform.translate(p);\n}\n\nfunction pushScale(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 1 && p.y === 1) return;\n\tgfx.transform = gfx.transform.scale(p);\n}\n\nfunction pushRotateX(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateX(a);\n}\n\nfunction pushRotateY(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateY(a);\n}\n\nfunction pushRotateZ(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateZ(a);\n}\n\nfunction pushTransform() {\n\tgfx.transformStack.push(gfx.transform.clone());\n}\n\nfunction popTransform() {\n\tif (gfx.transformStack.length > 0) {\n\t\tgfx.transform = gfx.transformStack.pop();\n\t}\n}\n\n// draw a uv textured quad\nfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\tconst q = opt.quad || new Quad(0, 0, 1, 1);\n\tconst color = opt.color || rgb(255, 255, 255);\n\tconst opacity = opt.opacity ?? 1;\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushRotateZ(opt.angle);\n\tpushScale(opt.scale);\n\tpushTranslate(offset);\n\n\tdrawRaw([\n\t\t{\n\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform);\n\n\tpopTransform();\n\n}\n\n// TODO: clean\nfunction drawTexture(opt: DrawTextureOpt) {\n\n\tif (!opt.tex) {\n\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t}\n\n\tconst q = opt.quad ?? new Quad(0, 0, 1, 1);\n\tconst w = opt.tex.width * q.w;\n\tconst h = opt.tex.height * q.h;\n\tconst scale = vec2(1);\n\n\tif (opt.tiled) {\n\n\t\t// TODO: draw fract\n\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t// TODO: rotation\n\t\tfor (let i = 0; i < repX; i++) {\n\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\t...opt,\n\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\tquad: q,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// TODO: should this ignore scale?\n\t\tif (opt.width && opt.height) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = opt.height / h;\n\t\t} else if (opt.width) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = scale.x;\n\t\t} else if (opt.height) {\n\t\t\tscale.y = opt.height / h;\n\t\t\tscale.x = scale.y;\n\t\t}\n\n\t\tdrawUVQuad({\n\t\t\t...opt,\n\t\t\t// @ts-ignore\n\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\ttex: opt.tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\n// TODO: use native asset loader tracking\nconst loading = new Set();\n\nfunction drawSprite(opt: DrawSpriteOpt) {\n\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\n\tconst spr = findAsset(opt.sprite, assets.sprites);\n\n\tif (!spr) {\n\n\t\t// if passes a source url, we load it implicitly\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\tif (!loading.has(opt.sprite)) {\n\t\t\t\tloading.add(opt.sprite);\n\t\t\t\tloadSprite(opt.sprite, opt.sprite)\n\t\t\t\t\t.then((a) => loading.delete(opt.sprite));\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t\t}\n\n\t}\n\n\tconst q = spr.frames[opt.frame ?? 0];\n\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\n\tdrawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || new Quad(0, 0, 1, 1)),\n\t\tuniform: opt.uniform,\n\t});\n\n}\n\n// generate vertices to form an arc\nfunction getArcPts(\n\tpos: Vec2,\n\tradiusX: number,\n\tradiusY: number,\n\tstart: number,\n\tend: number,\n\tres: number = 1,\n): Vec2[] {\n\n\t// normalize and turn start and end angles to radians\n\tstart = deg2rad(start % 360);\n\tend = deg2rad(end % 360);\n\tif (end <= start) end += Math.PI * 2;\n\n\t// TODO: better way to get this?\n\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\tconst step = (end - start) / nverts;\n\tconst pts = [];\n\n\t// calculate vertices\n\tfor (let a = start; a < end; a += step) {\n\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t}\n\n\t// doing this on the side due to possible floating point inaccuracy\n\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\treturn pts;\n\n}\n\nfunction drawRect(opt: DrawRectOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\tlet pts = [\n\t\tvec2(0, 0),\n\t\tvec2(w, 0),\n\t\tvec2(w, h),\n\t\tvec2(0, h),\n\t];\n\n\t// TODO: drawPolygon should handle generic rounded corners\n\tif (opt.radius) {\n\n\t\t// maxium radius is half the shortest side\n\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\tpts = [\n\t\t\tvec2(r, 0),\n\t\t\tvec2(w - r, 0),\n\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\tvec2(w, r),\n\t\t\tvec2(w, h - r),\n\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\tvec2(w - r, h),\n\t\t\tvec2(r, h),\n\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\tvec2(0, h - r),\n\t\t\tvec2(0, r),\n\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t];\n\n\t}\n\n\tdrawPolygon({ ...opt, offset, pts });\n\n}\n\nfunction drawLine(opt: DrawLineOpt) {\n\n\tconst { p1, p2 } = opt;\n\n\tif (!p1 || !p2) {\n\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t}\n\n\tconst w = opt.width || 1;\n\n\t// the displacement from the line end point to the corner point\n\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t// calculate the 4 corner points of the line polygon\n\tconst verts = [\n\t\tp1.sub(dis),\n\t\tp1.add(dis),\n\t\tp2.add(dis),\n\t\tp2.sub(dis),\n\t].map((p) => ({\n\t\tpos: vec3(p.x, p.y, 0),\n\t\tuv: vec2(0),\n\t\tcolor: opt.color ?? Color.WHITE,\n\t\topacity: opt.opacity ?? 1,\n\t}));\n\n\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n}\n\nfunction drawLines(opt: DrawLinesOpt) {\n\n\tconst pts = opt.pts;\n\n\tif (!pts) {\n\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t}\n\n\tif (pts.length < 2) {\n\t\treturn;\n\t}\n\n\tif (opt.radius && pts.length >= 3) {\n\n\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t}\n\n\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\tconst p1 = pts[i];\n\t\t\tconst p2 = pts[i + 1];\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: p1,\n\t\t\t\tp2: p2,\n\t\t\t});\n\t\t}\n\n\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t} else {\n\n\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: pts[i],\n\t\t\t\tp2: pts[i + 1],\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n\nfunction drawTriangle(opt: DrawTriangleOpt) {\n\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t}\n\treturn drawPolygon({\n\t\t...opt,\n\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t});\n}\n\n// TODO: origin\nfunction drawCircle(opt: DrawCircleOpt) {\n\n\tif (!opt.radius) {\n\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t}\n\n\tif (opt.radius === 0) {\n\t\treturn;\n\t}\n\n\tdrawEllipse({\n\t\t...opt,\n\t\tradiusX: opt.radius,\n\t\tradiusY: opt.radius,\n\t\tangle: 0,\n\t});\n\n}\n\n// TODO: use fan-like triangulation\nfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t}\n\n\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\treturn;\n\t}\n\n\tdrawPolygon({\n\t\t...opt,\n\t\tpts: getArcPts(\n\t\t\tvec2(0),\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\topt.start ?? 0,\n\t\t\topt.end ?? 360,\n\t\t\topt.resolution\n\t\t),\n\t\tradius: 0,\n\t});\n\n}\n\nfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\tif (!opt.pts) {\n\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t}\n\n\tconst npts = opt.pts.length;\n\n\tif (npts < 3) {\n\t\treturn;\n\t}\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushScale(opt.scale);\n\tpushRotateZ(opt.angle);\n\tpushTranslate(opt.offset);\n\n\tif (opt.fill !== false) {\n\n\t\tconst color = opt.color ?? Color.WHITE;\n\n\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\tuv: vec2(0, 0),\n\t\t\tcolor: color,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\t// TODO: better triangulation\n\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t.flat();\n\n\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tif (opt.outline) {\n\t\tdrawLines({\n\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\tradius: opt.radius,\n\t\t\twidth: opt.outline.width,\n\t\t\tcolor: opt.outline.color,\n\t\t\tuniform: opt.uniform,\n\t\t\tfixed: opt.fixed,\n\t\t});\n\t}\n\n\tpopTransform();\n\n}\n\nfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\tif (tr.angle) fchar.angle += tr.angle;\n\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\tif (tr.opacity) fchar.opacity *= tr.opacity;\n}\n\n// TODO: escape\nconst TEXT_STYLE_RE = /\\[(?<text>[^\\]]*)\\]\\.(?<style>[\\w\\.]+)+/g;\n\nfunction compileStyledText(text: string): {\n\tcharStyleMap: Record<number, {\n\t\tlocalIdx: number,\n\t\tstyles: string[],\n\t}>,\n\ttext: string,\n} {\n\n\tconst charStyleMap = {};\n\t// get the text without the styling syntax\n\tconst renderText = text.replace(TEXT_STYLE_RE, \"$1\");\n\tlet idxOffset = 0;\n\n\t// put each styled char index into a map for easy access when iterating each char\n\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\tconst styles = match.groups.style.split(\".\");\n\t\tconst origIdx = match.index - idxOffset;\n\t\tfor (\n\t\t\tlet i = origIdx;\n\t\t\ti < match.index + match.groups.text.length;\n\t\t\ti++\n\t\t) {\n\t\t\tcharStyleMap[i] = {\n\t\t\t\tlocalIdx: i - origIdx,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\t\t}\n\t\t// omit \"[\", \"]\", \".\" and the style text in the format string when calculating index\n\t\tidxOffset += 3 + match.groups.style.length;\n\t}\n\n\treturn {\n\t\tcharStyleMap: charStyleMap,\n\t\ttext: renderText,\n\t};\n\n}\n\nfunction findAsset<T>(src: string | T, lib: Record<string, T>, def?: string): T | undefined {\n\tif (src) {\n\t\treturn typeof src === \"string\" ? lib[src] : src;\n\t} else if (def) {\n\t\treturn lib[def];\n\t}\n}\n\n// format text and return a list of chars with their calculated position\nfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\tif (opt.text === undefined) {\n\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\");\n\t}\n\n\tconst font = findAsset(opt.font ?? gopt.font, assets.fonts, DEF_FONT);\n\n\tif (!font) {\n\t\tthrow new Error(`Font not found: ${opt.font}`);\n\t}\n\n\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\");\n\tconst chars = text.split(\"\");\n\tconst gw = font.qw * font.tex.width;\n\tconst gh = font.qh * font.tex.height;\n\tconst size = opt.size || gh;\n\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\tconst cw = scale.x * gw + (opt.letterSpacing ?? 0);\n\tconst ch = scale.y * gh + (opt.lineSpacing ?? 0);\n\tlet curX = 0;\n\tlet th = ch;\n\tlet tw = 0;\n\tconst flines = [];\n\tlet curLine = [];\n\tlet lastSpace = null;\n\tlet cursor = 0;\n\n\twhile (cursor < chars.length) {\n\n\t\tlet char = chars[cursor];\n\n\t\t// check new line\n\t\tif (char === \"\\n\") {\n\t\t\t// always new line on '\\n'\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tlastSpace = null;\n\t\t\tcurLine.push(char);\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t// new line on last word if width exceeds\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tif (lastSpace != null) {\n\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\tchar = chars[cursor];\n\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t}\n\t\t\tlastSpace = null;\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t}\n\n\t\t// push char\n\t\tif (char !== \"\\n\") {\n\t\t\tcurLine.push(char);\n\t\t\tcurX += cw;\n\t\t\tif (char === \" \") {\n\t\t\t\tlastSpace = curLine.length;\n\t\t\t}\n\t\t}\n\n\t\ttw = Math.max(tw, curX);\n\t\tcursor++;\n\n\t}\n\n\tflines.push(curLine);\n\n\tif (opt.width) {\n\t\ttw = opt.width;\n\t}\n\n\t// whole text offset\n\tconst fchars = [];\n\tconst pos = vec2(opt.pos || 0);\n\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t// this math is complicated i forgot how it works instantly\n\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\tlet idx = 0;\n\n\tflines.forEach((line, ln) => {\n\n\t\t// line offset\n\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\tline.forEach((char, cn) => {\n\t\t\tconst qpos = font.map[char];\n\t\t\tconst x = cn * cw;\n\t\t\tconst y = ln * ch;\n\t\t\tif (qpos) {\n\t\t\t\tconst fchar: FormattedChar = {\n\t\t\t\t\ttex: font.tex,\n\t\t\t\t\tquad: new Quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\tch: char,\n\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\tscale: scale,\n\t\t\t\t\tangle: 0,\n\t\t\t\t\tuniform: opt.uniform,\n\t\t\t\t\tfixed: opt.fixed,\n\t\t\t\t}\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, char)\n\t\t\t\t\t\t: opt.transform;\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst { styles, localIdx } = charStyleMap[idx];\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name];\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(localIdx, char)\n\t\t\t\t\t\t\t: style;\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfchars.push(fchar);\n\t\t\t}\n\t\t\tidx += 1;\n\t\t});\n\t});\n\n\treturn {\n\t\twidth: tw,\n\t\theight: th,\n\t\tchars: fchars,\n\t};\n\n}\n\nfunction drawText(opt: DrawTextOpt) {\n\tdrawFormattedText(formatText(opt));\n}\n\n// TODO: rotation\nfunction drawFormattedText(ftext: FormattedText) {\n\tfor (const ch of ftext.chars) {\n\t\tdrawUVQuad({\n\t\t\ttex: ch.tex,\n\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\tpos: ch.pos,\n\t\t\tscale: ch.scale,\n\t\t\tangle: ch.angle,\n\t\t\tcolor: ch.color,\n\t\t\topacity: ch.opacity,\n\t\t\tquad: ch.quad,\n\t\t\t// TODO: topleft\n\t\t\torigin: \"center\",\n\t\t\tuniform: ch.uniform,\n\t\t\tfixed: ch.fixed,\n\t\t});\n\t}\n}\n\n/**\n * Update viewport based on user setting and fullscreen state\n */\nfunction updateViewport() {\n\n\tconst gl = app.gl;\n\n\t// canvas size\n\tconst cw = gl.drawingBufferWidth;\n\tconst ch = gl.drawingBufferHeight;\n\n\t// game size\n\tconst gw = width();\n\tconst gh = height();\n\n\tif (isFullscreen()) {\n\t\t// TODO: doesn't work with letterbox\n\t\tconst ww = window.innerWidth;\n\t\tconst wh = window.innerHeight;\n\t\tconst rw = ww / wh;\n\t\tconst rc = cw / ch;\n\t\tif (rw > rc) {\n\t\t\tconst sw = window.innerHeight * rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: wh,\n\t\t\t};\n\t\t} else {\n\t\t\tconst sh = window.innerWidth / rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\twidth: ww,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\n\tif (gopt.letterbox) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\");\n\t\t}\n\n\t\tconst rc = cw / ch;\n\t\tconst rg = gopt.width / gopt.height;\n\n\t\tif (rc > rg) {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = ch * rg;\n\t\t\t\tgfx.height = ch;\n\t\t\t}\n\t\t\tconst sw = ch * rg;\n\t\t\tconst sh = ch;\n\t\t\tconst x = (cw - sw) / 2;\n\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\tgl.viewport(x, 0, sw, ch);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: ch,\n\t\t\t};\n\t\t} else {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = cw;\n\t\t\t\tgfx.height = cw / rg;\n\t\t\t}\n\t\t\tconst sw = cw;\n\t\t\tconst sh = cw / rg;\n\t\t\tconst y = (ch - sh) / 2;\n\t\t\tgl.scissor(0, y, sw, sh);\n\t\t\tgl.viewport(0, y, cw, sh);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: y,\n\t\t\t\twidth: cw,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\n\t\treturn;\n\n\t}\n\n\tif (gopt.stretch) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Stretching requires width and height defined.\");\n\t\t}\n\n\t\tgl.viewport(0, 0, cw, ch);\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t};\n\n\t\treturn;\n\t}\n\n\tgfx.width = cw / app.scale;\n\tgfx.height = ch / app.scale;\n\tgl.viewport(0, 0, cw, ch);\n\n\tgfx.viewport = {\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: cw,\n\t\theight: ch,\n\t};\n\n}\n\n// get game width\nfunction width(): number {\n\treturn gfx.width;\n}\n\n// get game height\nfunction height(): number {\n\treturn gfx.height;\n}\n\n// TODO: support remove events\napp.canvas.addEventListener(\"mousemove\", (e) => {\n\tapp.mousePos = vec2(\n\t\t(e.offsetX - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t(e.offsetY - gfx.viewport.y) * height() / gfx.viewport.height,\n\t);\n\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"mousedown\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"pressed\";\n\t}\n});\n\napp.canvas.addEventListener(\"mouseup\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"released\";\n\t}\n});\n\napp.canvas.addEventListener(\"keydown\", (e) => {\n\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\n\tif (PREVENT_DEFAULT_KEYS.includes(k)) {\n\t\te.preventDefault();\n\t}\n\n\tif (k.length === 1) {\n\t\tapp.charInputted.push(e.key);\n\t}\n\n\tif (k === \"space\") {\n\t\tapp.charInputted.push(\" \");\n\t}\n\n\tif (e.repeat) {\n\t\tapp.isKeyPressedRepeat = true;\n\t\tapp.keyStates[k] = \"rpressed\";\n\t} else {\n\t\tapp.isKeyPressed = true;\n\t\tapp.keyStates[k] = \"pressed\";\n\t}\n\n});\n\napp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\tapp.keyStates[k] = \"released\";\n\tapp.isKeyReleased = true;\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable long tap context menu\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.mouseStates[\"left\"] = \"pressed\";\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable scrolling\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchcancel\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"contextmenu\", function (e) {\n\te.preventDefault();\n});\n\ndocument.addEventListener(\"visibilitychange\", () => {\n\tswitch (document.visibilityState) {\n\t\tcase \"visible\":\n\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\tapp.skipTime = true;\n\t\t\t// TODO: don't resume if debug.paused\n\t\t\taudio.ctx.resume();\n\t\t\tbreak;\n\t\tcase \"hidden\":\n\t\t\taudio.ctx.suspend();\n\t\t\tbreak;\n\t}\n});\n\n// TODO: not quite working\n// window.addEventListener(\"resize\", () => {\n// \tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n// \t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n// \t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n// \t}\n// });\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos.clone();\n}\n\nfunction mouseDeltaPos(): Vec2 {\n\treturn app.mouseDeltaPos.clone();\n}\n\nfunction isMousePressed(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\";\n}\n\nfunction isMouseDown(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n}\n\nfunction isMouseReleased(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"released\";\n}\n\nfunction isMouseMoved(): boolean {\n\treturn app.isMouseMoved;\n}\n\nfunction isKeyPressed(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressed;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n}\n\nfunction isKeyPressedRepeat(k: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressedRepeat;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n}\n\nfunction isKeyDown(k: string): boolean {\n\treturn app.keyStates[k] === \"pressed\"\n\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t|| app.keyStates[k] === \"down\";\n}\n\nfunction isKeyReleased(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyReleased;\n\t} else {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n}\n\nfunction charInputted(): string[] {\n\treturn [...app.charInputted];\n}\n\nfunction time(): number {\n\treturn app.time;\n}\n\n// get a base64 png image of canvas\nfunction screenshot(): string {\n\treturn app.canvas.toDataURL();\n}\n\n// TODO: custom cursor\nfunction cursor(c?: Cursor): Cursor {\n\tif (c) {\n\t\tapp.canvas.style.cursor = c;\n\t}\n\treturn app.canvas.style.cursor;\n}\n\nfunction fullscreen(f: boolean = true) {\n\tif (f) {\n\t\tenterFullscreen(app.canvas);\n\t} else {\n\t\texitFullscreen();\n\t}\n}\n\nfunction isFullscreen(): boolean {\n\treturn Boolean(getFullscreenElement());\n}\n\nfunction quit() {\n\tcancelAnimationFrame(app.loopID);\n\tapp.stopped = true;\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: () => app.fpsCounter.fps,\n\tobjCount(): number {\n\t\t// TODO: recursive count\n\t\treturn game.root.children.length;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: () => gfx.drawCalls,\n\tclearLog: () => game.logs = [],\n\tlog: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].info`),\n\terror: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].error`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn app.paused;\n\t},\n\tset paused(v) {\n\t\tapp.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction dt() {\n\treturn app.dt * debug.timeScale;\n}\n\nfunction mouseWorldPos(): Vec2 {\n\tdeprecateMsg(\"mouseWorldPos()\", \"toWorld(mousePos())\");\n\treturn toWorld(mousePos());\n}\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.cam.transform.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.cam.transform.invert().multVec2(p);\n}\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tlet events = {};\n\n\tconst obj = {\n\n\t\t_id: uid(),\n\t\thidden: false,\n\t\tpaused: false,\n\t\tchildren: [],\n\t\tparent: null,\n\n\t\t// TODO: accept gameobj\n\t\tadd<T2>(comps: CompList<T2>): GameObj<T2> {\n\t\t\tif (this !== game.root) {\n\t\t\t\tthrow new Error(\"Children game object not supported yet\");\n\t\t\t}\n\t\t\tconst obj = make(comps);\n\t\t\tobj.parent = this;\n\t\t\tobj.trigger(\"add\");\n\t\t\tonLoad(() => obj.trigger(\"load\"));\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\t// TODO: use add()\n\t\treadd(obj: GameObj): GameObj {\n\t\t\tthis.remove(obj);\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\tremove(obj: GameObj): void {\n\t\t\tconst idx = this.children.indexOf(obj);\n\t\t\tif (idx !== -1) {\n\t\t\t\tobj.parent = null;\n\t\t\t\tobj.trigger(\"destroy\");\n\t\t\t\tthis.children.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t\tremoveAll(tag: Tag) {\n\t\t\tthis.every(tag, (obj) => this.remove(obj));\n\t\t},\n\n\t\tupdate() {\n\t\t\tif (this.paused) return;\n\t\t\tthis.revery((child) => child.update());\n\t\t\tthis.trigger(\"update\");\n\t\t},\n\n\t\tdraw() {\n\t\t\tif (this.hidden) return;\n\t\t\tpushTransform();\n\t\t\tpushTranslate(this.pos);\n\t\t\tpushScale(this.scale);\n\t\t\tpushRotateZ(this.angle);\n\t\t\tthis.every((child) => child.draw());\n\t\t\tthis.trigger(\"draw\");\n\t\t\tpopTransform();\n\t\t},\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", checkDeps));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\t// TODO: a recursive variant\n\t\tget(t?: Tag | Tag[]): GameObj[] {\n\t\t\treturn this.children\n\t\t\t\t.filter((child) => t ? child.is(t) : true)\n\t\t\t\t.sort((o1, o2) => {\n\t\t\t\t\t// TODO: layers are deprecated\n\t\t\t\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\t\t\t\tif (l1 == l2) {\n\t\t\t\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn l1 - l2;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\n\t\tevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\trevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().reverse().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).reverse().forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\texists(): boolean {\n\t\t\tif (this.parent === game.root) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.parent?.exists();\n\t\t\t}\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\tconsole.warn(\"action() is deprecated. Use onUpdate() instead\")\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\t\t\tthis.parent?.remove(this);\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t\tclearEvents() {\n\t\t\tevents = {}\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onUpdate(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onDraw(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push(new Timer(t, () => {\n\t\t\tif (f) f();\n\t\t\tresolve();\n\t\t}))\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => isMouseMoved() && f(mousePos(), mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => charInputted().forEach((ch) => f(ch)));\n}\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", burp);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tgame.root.every((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// TODO\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(dir: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction outview(opt: OutviewCompOpt = {}): OutviewComp {\n\tlet timer = 0;\n\tlet isOut = false;\n\treturn {\n\t\tid: \"outview\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tisOutOfView(): boolean {\n\t\t\tconst offset = vec2(opt.offset ?? 0);\n\t\t\tconst screenRect = new Rect(\n\t\t\t\tvec2(0, 0).sub(offset),\n\t\t\t\tvec2(width(), height()).add(offset),\n\t\t\t);\n\t\t\treturn !testAreaRect(this.screenArea(), screenRect);\n\t\t},\n\t\tonExitView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"exitView\", action);\n\t\t},\n\t\tonEnterView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"enterView\", action);\n\t\t},\n\t\tupdate() {\n\t\t\tif (this.isOutOfView()) {\n\t\t\t\tif (!isOut) {\n\t\t\t\t\tthis.trigger(\"exitView\");\n\t\t\t\t\tisOut = true;\n\t\t\t\t}\n\t\t\t\tif (opt.delay) {\n\t\t\t\t\ttimer += dt();\n\t\t\t\t\tif (timer < opt.delay) return\n\t\t\t\t}\n\t\t\t\tif (opt.hide) this.hidden = true;\n\t\t\t\tif (opt.pause) this.paused = true;\n\t\t\t\tif (opt.destroy) this.destroy();\n\t\t\t} else {\n\t\t\t\tif (isOut) {\n\t\t\t\t\tthis.trigger(\"enterView\");\n\t\t\t\t\tisOut = false;\n\t\t\t\t}\n\t\t\t\ttimer = 0;\n\t\t\t\tif (opt.hide) this.hidden = false;\n\t\t\t\tif (opt.pause) this.paused = false;\n\t\t\t}\n\t\t},\n\t\tinspect() {\n\t\t\treturn this.isOutOfView();\n\t\t},\n\t};\n}\n\nfunction cleanup(opt: (number | undefined) | CleanupCompOpt = {}): CleanupComp {\n\tif (typeof opt === \"number\") {\n\t\tdeprecateMsg(\"clean(time)\", \"cleanup({ delay: time })\");\n\t\treturn {\n\t\t\t...outview({\n\t\t\t\tdestroy: true,\n\t\t\t\tdelay: opt,\n\t\t\t}),\n\t\t\tid: \"cleanup\",\n\t\t};\n\t}\n\treturn {\n\t\t...outview({\n\t\t\tdestroy: true,\n\t\t\tonExitView: opt.onCleanup,\n\t\t\toffset: opt.offset,\n\t\t\tdelay: opt.delay,\n\t\t}),\n\t\tid: \"cleanup\",\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\t// TODO: collect\n\t\t\t\tthis.onHover(() => cursor(this.area.cursor));\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos());\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\tdeprecateMsg(\"clicks()\", \"onClick()\");\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\tdeprecateMsg(\"hovers()\", \"onHover()\");\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\tdeprecateMsg(\"collides()\", \"onCollide()\");\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tgame.root.every(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tgame.root.every(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: doesn't work with nested parent transforms\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: toScreen(area.p1),\n\t\t\t\t\tp2: toScreen(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tfixed: obj.fixed,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = spr.frames[0].clone();\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\tconst ftext = formatText({\n\t\t\t...getRenderProps(obj),\n\t\t\ttext: obj.text + \"\",\n\t\t\tsize: obj.textSize,\n\t\t\tfont: obj.font,\n\t\t\twidth: opt.width && obj.width,\n\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\ttransform: obj.transform,\n\t\t\tstyles: obj.styles,\n\t\t});\n\n\t\tobj.width = ftext.width / (obj.scale?.x || 1);\n\t\tobj.height = ftext.height / (obj.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: opt.width,\n\t\theight: 0,\n\t\tlineSpacing: opt.lineSpacing,\n\t\tletterSpacing: opt.letterSpacing,\n\t\ttransform: opt.transform,\n\t\tstyles: opt.styles,\n\n\t\tload() {\n\t\t\tupdate(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawFormattedText(update(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tdrawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tdrawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tdrawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(time?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (time && action) {\n\t\ttimers.pushd(new Timer(time, action));\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(time: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd(new Timer(time, action));\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\tif (timer.tick(dt())) {\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\tdeprecateMsg(\"grounded()\", \"isGrounded()\");\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\tdeprecateMsg(\"falling()\", \"isFalling()\");\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(\n\tinitState: string,\n\tstateList?: string[],\n\ttransitions?: Record<string, string | string[]>,\n): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\n\t\tid: \"state\",\n\t\tstate: initState,\n\n\t\tenterState(state: string, ...args) {\n\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\n\t\t\tconst oldState = this.state;\n\n\t\t\tif (transitions) {\n\n\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t: transitions[oldState] as string[];\n\n\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttrigger(\"leave\", oldState, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", state, ...args);\n\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args);\n\n\t\t},\n\n\t\tonStateTransition(from: string, to: string, action: () => void) {\n\t\t\ton(\"enter\", `${from} -> ${to}`, action);\n\t\t},\n\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn this.state;\n\t\t},\n\n\t};\n\n}\n\nfunction onLoad(cb: () => void): void {\n\tif (app.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.root.every((obj) => {\n\t\t\tif (!obj.is(\"stay\")) {\n\t\t\t\tgame.root.remove(obj);\n\t\t\t}\n\t\t})\n\n\t\tgame.root.clearEvents();\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t};\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = game.root.add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tobj.destroy();\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t},\n\n\t};\n\n}\n\nfunction focus() {\n\tdeprecateMsg(\"focus()\", \"canvas.focus()\");\n\tapp.canvas.focus();\n}\n\nfunction isFocused(): boolean {\n\treturn document.activeElement === app.canvas;\n}\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\n// aliases for root game obj operations\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\treturn game.root.add(comps);\n}\n\nfunction readd<T>(obj: GameObj<T>): GameObj<T> {\n\treturn game.root.readd(obj);\n}\n\nfunction destroy(obj: GameObj) {\n\treturn game.root.remove(obj);\n}\n\nfunction destroyAll(tag: Tag) {\n\treturn game.root.removeAll(tag);\n}\n\nfunction get(...args) {\n\treturn game.root.get(...args);\n}\n\nfunction every(...args) {\n\t// @ts-ignore\n\treturn game.root.every(...args);\n}\n\nfunction revery(...args) {\n\t// @ts-ignore\n\treturn game.root.revery(...args);\n}\n\ninterface ExplodeComp extends Comp {\n}\n\nfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\tlet time = 0;\n\treturn {\n\t\tid: \"explode\",\n\t\trequire: [ \"scale\", ],\n\t\tupdate() {\n\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\tif (s < 0) {\n\t\t\t\tdestroy(this);\n\t\t\t}\n\t\t\tthis.scale = vec2(s);\n\t\t\ttime += dt();\n\t\t},\n\t};\n}\n\nlet kaSprite = null;\nlet boomSprite = null;\n\nloadSprite(null, kaSrc).then((spr) => kaSprite = spr);\nloadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n// TODO: use children obj\nfunction addKaboom(p: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\tconst speed = (opt.speed || 1) * 5;\n\tconst s = opt.scale || 1;\n\n\tconst boom = add([\n\t\tpos(p),\n\t\tsprite(boomSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\texplode(speed, s),\n\t\t...(opt.boomComps ?? (() => []))(),\n\t]);\n\n\tconst ka = add([\n\t\tpos(p),\n\t\tsprite(kaSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\ttimer(0.4 / speed, () => ka.use(explode(speed, s))),\n\t\t...(opt.kaComps ?? (() => []))(),\n\t]);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tdestroy(ka);\n\t\t\tdestroy(boom);\n\t\t},\n\t};\n\n}\n\nfunction frames() {\n\treturn app.numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\tgame.root.update();\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst cam = game.cam;\n\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.transform = new Mat4()\n\t\t.translate(center())\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(cam.pos.scale(-1).add(shake))\n\t\t;\n\n\tgame.root.draw();\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = loadProgress();\n\n\tif (progress === 1) {\n\t\tapp.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / app.scale;\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tdrawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / app.scale,\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawInspectText(pos, txt) {\n\n\tconst pad = vec2(8);\n\n\tpushTransform();\n\tpushTranslate(pos);\n\tpushScale(1 / app.scale);\n\n\tconst ftxt = formatText({\n\t\ttext: txt,\n\t\tfont: assets.fonts[DBG_FONT],\n\t\tsize: 16,\n\t\tpos: pad,\n\t\tcolor: rgb(255, 255, 255),\n\t\tfixed: true,\n\t});\n\n\tconst bw = ftxt.width + pad.x * 2;\n\tconst bh = ftxt.height + pad.x * 2;\n\n\tif (pos.x + bw / app.scale >= width()) {\n\t\tpushTranslate(vec2(-bw, 0));\n\t}\n\n\tif (pos.y + bh / app.scale >= height()) {\n\t\tpushTranslate(vec2(0, -bh));\n\t}\n\n\tdrawRect({\n\t\twidth: bw,\n\t\theight: bh,\n\t\tcolor: rgb(0, 0, 0),\n\t\tradius: 4,\n\t\topacity: 0.8,\n\t\tfixed: true,\n\t});\n\n\tdrawFormattedText(ftxt);\n\tpopTransform();\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst lcolor = Color.fromArray(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\t// draw area outline\n\t\tgame.root.every((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4);\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tdrawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t\tfixed: obj.fixed,\n\t\t\t});\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectText(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectText(vec2(8 / app.scale), `FPS: ${debug.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), 0);\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tdrawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = formatText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tdrawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tdrawFormattedText(ftxt);\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(24, -24);\n\n\t\tdrawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, time() * 4),\n\t\t\tfixed: true,\n\t\t});\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.showLog && game.logs.length > 0) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(8, -8);\n\n\t\tconst pad = 8;\n\t\tconst max = gopt.logMax ?? 1;\n\n\t\tif (game.logs.length > max) {\n\t\t\tgame.logs = game.logs.slice(0, max);\n\t\t}\n\n\t\tconst ftext = formatText({\n\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tpos: vec2(pad, -pad),\n\t\t\torigin: \"botleft\",\n\t\t\tsize: 16,\n\t\t\twidth: width() * app.scale * 0.6,\n\t\t\tlineSpacing: pad / 2,\n\t\t\tfixed: true,\n\t\t\tstyles: {\n\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\twidth: ftext.width + pad * 2,\n\t\t\theight: ftext.height + pad * 2,\n\t\t\torigin: \"botleft\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\tradius: 4,\n\t\t\topacity: 0.8,\n\t\t\tfixed: true,\n\t\t});\n\n\t\tdrawFormattedText(ftext);\n\t\tpopTransform();\n\n\t}\n\n}\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tdebug.error(`Error: ${e.error.message}`);\n\tquit();\n\trun(() => {\n\t\tif (loadProgress() === 1) {\n\t\t\tframeStart();\n\t\t\tdrawDebug();\n\t\t\tframeEnd();\n\t\t}\n\t});\n});\n\nfunction run(f: () => void) {\n\n\tconst frame = (t: number) => {\n\n\t\tif (document.visibilityState !== \"visible\") {\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\treturn;\n\t\t}\n\n\t\tconst realTime = t / 1000;\n\t\tconst realDt = realTime - app.realTime;\n\n\t\tapp.realTime = realTime;\n\n\t\tif (!app.skipTime) {\n\t\t\tapp.dt = realDt;\n\t\t\tapp.time += app.dt;\n\t\t\tapp.fpsCounter.tick(app.dt);\n\t\t}\n\n\t\tapp.skipTime = false;\n\t\tapp.numFrames++;\n\n\t\tf();\n\n\t\tfor (const k in app.keyStates) {\n\t\t\tapp.keyStates[k] = processButtonState(app.keyStates[k]);\n\t\t}\n\n\t\tfor (const m in app.mouseStates) {\n\t\t\tapp.mouseStates[m] = processButtonState(app.mouseStates[m]);\n\t\t}\n\n\t\tapp.charInputted = [];\n\t\tapp.isMouseMoved = false;\n\t\tapp.isKeyPressed = false;\n\t\tapp.isKeyPressedRepeat = false;\n\t\tapp.isKeyReleased = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t};\n\n\tapp.stopped = false;\n\tapp.loopID = requestAnimationFrame(frame);\n\n}\n\n// main game loop\nrun(() => {\n\n\t// running this every frame now mainly because isFullscreen() is not updated real time when requested fullscreen\n\tupdateViewport();\n\n\tif (!app.loaded) {\n\t\tframeStart();\n\t\tdrawLoadScreen();\n\t\tframeEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tframeStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tframeEnd();\n\n\t}\n\n});\n\nloadFont(\n\t\"apl386\",\n\tapl386Src,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"apl386o\",\n\tapl386oSrc,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"sink\",\n\tsinkSrc,\n\t6,\n\t8,\n\t{\n\t\tchars: `\u2588\u263A\u263B\u2665\u2666\u2663\u2660\u25CF\u25CB\u25AA\u25A1\u25A0\u25D8\u266A\u266B\u2261\u25BA\u25C4\u2302\u00DE\u00C0\u00DF\u00D7\u00A5\u2191\u2193\u2192\u2190\u25CC\u25CF\u25BC\u25B2 !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~\u03A7\u2591\u2592\u2593\u1E00\u1E01\u1E02\u2502\u252C\u2524\u250C\u2510\u1E03\u1E04\u253C\u1E05\u1E06\u1E07\u1E08\u1E09\u1E0A\u1E0B\u1E0C\u2500\u251C\u2534\u2514\u2518\u1E0D\u1E0E\u205E\u1E0F\u1E10\u1E11\u1E12\u1E13\u1E14\u1E15\u1E16\u1E17\u1E18\u2584\u1E19\u1E1A\u1E1B\u1E1C\u2026\u1E1D\u1E1E\u1E1F\u1E20\u1E21\u1E22\u1E23\u1E24\u1E25\u1E26\u258C\u2590\u1E27\u1E28\u1E29\u1E2A\u1E2B\u1E2C\u1E2D\u1E2E\u1E2F\u1E30\u1E31\u1E32\u1E33\u1E34\u1E35\u1E36\u1E37\u1E38\u1E39\u1E3A\u1E3B\u1E3C\u1E3D\u1E3E\u1E3F\u1E40\u1E41\u1E42\u1E43\u1E44\u1E45\u1E46\u1E47\u1E48\u1E49\u1E4A\u1E4B\u1E4C\u1E4D\u1E4E\u1E4F\u1E50\u1E51\u1E52\u1E53\u1E54\u1E55\u1E56\u1E57\u1E58\u1E59\u1E5A\u1E5B\u1E5C\u1E5D\u1E5E\u1E5F\u1E60\u1E61\u1E62\u1E63\u1E64\u1E65\u1E66\u1E67\u1E68\u1E69\u1E6A\u1E6B\u1E6C\u1E6D\u1E6E\u1E6F\u1E70\u1E71\u1E72\u1E73\u1E74\u1E75\u1E76\u1E77\u1E78\u1E79\u1E7A\u1E7B\u1E7C`,\n\t}\n);\n\nloadFont(\n\t\"sinko\",\n\tsinkoSrc,\n\t8,\n\t10,\n);\n\nframeStart();\nframeEnd();\n\n// the exported ctx handle\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot,\n\tloadSprite,\n\tloadSpriteAtlas,\n\tloadSound,\n\tloadFont,\n\tloadShader,\n\tloadAseprite,\n\tloadPedit,\n\tloadBean,\n\tload,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime,\n\tscreenshot,\n\trecord,\n\tisFocused,\n\tfocus,\n\tcursor,\n\tregCursor,\n\tfullscreen,\n\tisFullscreen,\n\tonLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\toutview,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos,\n\tisKeyDown,\n\tisKeyPressed,\n\tisKeyPressedRepeat,\n\tisKeyReleased,\n\tisMouseDown,\n\tisMousePressed,\n\tisMouseReleased,\n\tisMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume,\n\tburp,\n\taudioCtx: audio.ctx,\n\t// math\n\tTimer,\n\tLine,\n\tRect,\n\tCircle,\n\tVec2,\n\tColor,\n\tMat4,\n\tQuad,\n\tRNG,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tformatText,\n\tdrawRect,\n\tdrawLine,\n\tdrawLines,\n\tdrawTriangle,\n\tdrawCircle,\n\tdrawEllipse,\n\tdrawUVQuad,\n\tdrawPolygon,\n\tdrawFormattedText,\n\tpushTransform,\n\tpopTransform,\n\tpushTranslate,\n\tpushRotate: pushRotateZ,\n\tpushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dom\n\tcanvas: app.canvas,\n\t// misc\n\taddKaboom,\n\t// dirs\n\tLEFT: Vec2.LEFT,\n\tRIGHT: Vec2.RIGHT,\n\tUP: Vec2.UP,\n\tDOWN: Vec2.DOWN,\n\t// colors\n\tRED: Color.RED,\n\tGREEN: Color.GREEN,\n\tBLUE: Color.BLUE,\n\tYELLOW: Color.YELLOW,\n\tMAGENTA: Color.MAGENTA,\n\tCYAN: Color.CYAN,\n\tWHITE: Color.WHITE,\n\tBLACK: Color.BLACK,\n\t// deprecated\n\tkeyIsDown: deprecate(\"keyIsDown()\", \"isKeyDown()\", isKeyDown),\n\tkeyIsPressed: deprecate(\"keyIsPressed()\", \"isKeyPressed()\", isKeyPressed),\n\tkeyIsPressedRep: deprecate(\"keyIsPressedRep()\", \"isKeyPressedRepeat()\", isKeyPressedRepeat),\n\tkeyIsReleased: deprecate(\"keyIsReleased()\", \"isKeyReleased()\", isKeyReleased),\n\tmouseIsDown: deprecate(\"mouseIsDown()\", \"isMouseDown()\", isMouseDown),\n\tmouseIsClicked: deprecate(\"mouseIsClicked()\", \"isMousePressed()\", isMousePressed),\n\tmouseIsReleased: deprecate(\"mouseIsReleased()\", \"isMouseReleased()\", isMouseReleased),\n\tmouseIsMoved: deprecate(\"mouseIsMoved()\", \"isMouseMoved()\", isMouseMoved),\n\tdir: deprecate(\"dir()\", \"Vec2.fromAngle()\", Vec2.fromAngle),\n\taction: deprecate(\"action()\", \"onUpdate()\", onUpdate),\n\trender: deprecate(\"render()\", \"onDraw()\", onDraw),\n\tcollides: deprecate(\"collides()\", \"onCollide()\", onCollide),\n\tclicks: deprecate(\"clicks()\", \"onClick()\", onClick),\n\thovers: deprecate(\"hovers()\", \"onHover()\", onHover),\n\tkeyDown: deprecate(\"keyDown()\", \"onKeyDown()\", onKeyDown),\n\tkeyPress: deprecate(\"keyPress()\", \"onKeyPress()\", onKeyPress),\n\tkeyPressRep: deprecate(\"keyPressRep()\", \"onKeyPressRepeat()\", onKeyPressRepeat),\n\tkeyRelease: deprecate(\"keyRelease()\", \"onKeyRelease()\", onKeyRelease),\n\tmouseDown: deprecate(\"mouseDown()\", \"onMouseDown()\", onMouseDown),\n\tmouseClick: deprecate(\"mouseClick()\", \"onMousePress()\", onMousePress),\n\tmouseRelease: deprecate(\"mouseRelease()\", \"onMouseRelease()\", onMouseRelease),\n\tmouseMove: deprecate(\"mouseMove()\", \"onMouseMove()\", onMouseMove),\n\tcharInput: deprecate(\"charInput()\", \"onCharInput()\", onCharInput),\n\ttouchStart: deprecate(\"touchStart()\", \"onTouchStart()\", onTouchStart),\n\ttouchMove: deprecate(\"touchMove()\", \"onTouchMove()\", onTouchMove),\n\ttouchEnd: deprecate(\"touchEnd()\", \"onTouchEnd()\", onTouchEnd),\n\tfocused: deprecate(\"focused()\", \"isFocused()\", isFocused),\n\tready: deprecate(\"ready()\", \"onLoad()\", onLoad),\n};\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\n// export everything to window if global is set\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n", "export default function loadAssets() {\n\tloadSprite(\"ghosty\", \"sprites/GHOSTY_ENEMIES_0.png\");\n  loadSprite(\"forest1\", \"sprites/Mosscreep.png\");\n  loadSprite(\"ruinasbg\", \"sprites/ruinasbg.png\");\n  loadSprite(\"forestbg\", \"sprites/bosque2bg.png\")\n  loadSprite(\"ciudadbg\", \"sprites/ciudadbg.png\")\n  loadSprite(\"icebg\", \"sprites/icebg.png\")\n\tloadSprite(\"spike\", \"sprites/spikes2_Animation 1_0.png\");\n\tloadSprite(\"grass\", \"sprites/grass2_Animation 1_0.png\");\n\tloadSprite(\"piedra\", \"sprites/piedra.png\");\n  loadSprite(\"piedra\", \"sprites/piedra.png\");\n  loadSprite(\"wood\", \"sprites/Wood_BLOCKS_0.png\");\n  loadSprite(\"mountain\", \"sprites/Mountain.png\");\n  loadSprite(\"Ruins\", \"sprites/Ruins_BLOCKS_0.png\");\n  loadSprite(\"mafe\", \"sprites/Mafe.png.png\");\n  loadSprite(\"letrero\", \"sprites/Letrero_BLOCKS.png\");\n  loadSprite(\"mateo\", \"sprites/Personajes_Mateo.png\");\n  loadSprite(\"developer\", \"sprites/Personajes_Luis.png\");\n  loadSprite(\"casti\", \"sprites/Personajes_Casti.png\");\n  loadSprite(\"pavo\", \"sprites/Personajes_Pavo.png\");\n  loadSprite(\"silvi\", \"sprites/Personajes_Silvi.png\");\n  loadSprite(\"valeuwu\", \"sprites/Personajes_ValeQ.png\");\n  loadSprite(\"july\", \"sprites/Personajes_July.png\");\n\tloadSprite(\"prize\", \"sprites/jumpy.png\");\n  loadSprite(\"gemp1\", \"sprites/gemp1.png\");\n  loadSprite(\"gemp2\", \"sprites/gemp2.png\");\n  loadSprite(\"gemp3\", \"sprites/gemp3.png\");\n  loadSprite(\"gemp4\", \"sprites/gemp4.png\");\n  loadSprite(\"gemp5\", \"sprites/gemp5.png\");\n  loadSprite(\"gem\", \"sprites/gem.png\");\n  loadSprite(\"bfuerabg\", \"sprites/descarga.png\");\n  loadSprite(\"menubg\", \"sprites/manubg2.gif\");\n\tloadSprite(\"apple\", \"sprites/apple.png\"); \n\tloadSprite(\"portal\", \"sprites/portal3.png\");\n\tloadSprite(\"coin\", \"sprites/monedaa.png\");\n\tloadSprite(\"spikevoltiado\", \"sprites/spikes turned_Animation 1_0.png\");\n\tloadSound(\"coin\", \"sounds/score.mp3\");\n\tloadSound(\"powerup\", \"sounds/powerup.mp3\");\n\tloadSound(\"blip\", \"sounds/blip.mp3\");\n\tloadSound(\"hit\", \"sounds/hit.mp3\");\n  loadSound(\"yei\", \"sounds/congrat2.mp3\");\n\tloadSound(\"portal\", \"sounds/portal.mp3\");\n}\n", "import kaboom from \"kaboom\"\r\nimport loadAssets from \"./assets\"\r\n//Fixed assets load\r\n//CodedByLuis\r\n//CompetPanas\r\n//#LuisNet\n\n\r\nkaboom({ \r\ndebug: true,\t\r\n scale: 1, //FixedScale\r\nfont: \"apl386\",\r\nbackground: [ 46, 58, 81 ]\r\n})\r\nloadAssets()\r\nfunction patrol(speed = 60, dir = 1) {\r\n\treturn {\r\n\t\tid: \"patrol\",\r\n\t\trequire: [ \"pos\", \"area\", ],\r\n\t\tadd() {\r\n\t\t\tthis.on(\"collide\", (obj, col) => {\r\n\t\t\t\tif (col.isLeft() || col.isRight()) {\r\n\t\t\t\t\tdir = -dir\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tupdate() {\r\n\t\t\tthis.move(speed * dir, 0)\r\n\t\t},\r\n\t}\r\n}\r\n\nfunction human(speed = 60, dir = 1) {\n\treturn {\n\t\tid: \"human\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tadd() {\n\t\t\tthis.on(\"collide\", (obj, col) => {\n\t\t\t\tif (col.isLeft() || col.isRight()) {\n\t\t\t\t\tdir = -dir\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tupdate() {\n\t\t\tthis.move(speed * dir, 0)\n\t\t},\n\t}\n}\n\nfunction block(speed = 200, dir = 1) {\n\treturn {\n\t\tid: \"block\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tadd() {\n\t\t\tthis.on(\"collide\", (obj, col) => {\n\t\t\t\tif (col.isLeft() || col.isRight()) {\n\t\t\t\t\tdir = -dir\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tupdate() {\n\t\t\tthis.move(speed * dir, 0)\n\t\t},\n\t}\n}\n\nfunction bloc(speed = 200, dir = 1) {\n\treturn {\n\t\tid: \"block\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tadd() {\n\t\t\tthis.on(\"collide\", (obj, col) => {\n\t\t\t\tif (col.isUp() || col.isDown()) {\n\t\t\t\t\tdir = -dir\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tupdate() {\n\t\t\tthis.move(speed * dir, 0)\n\t\t},\n\t}\n}\n\r\nfunction big() {\r\n\tlet timer = 0\r\n\tlet isBig = false\r\n\tlet destScale = 1\r\n\treturn {\r\n\t\tid: \"big\",\r\n\t\trequire: [ \"scale\" ],\r\n\t\tupdate() {\r\n\t\t\tif (isBig) {\r\n\t\t\t\ttimer -= dt()\r\n\t\t\t\tif (timer <= 0) {\r\n\t\t\t\t\tthis.biggify()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scale = this.scale.lerp(vec2(destScale), dt() * 6)\r\n\t\t},\r\n\t\tisBig() {\r\n\t\t\treturn isBig\r\n\t\t},\r\n\t\tsmallify() {\r\n\t\t\tdestScale = 1\r\n\t\t\ttimer = 0\r\n\t\t\tisBig = false\r\n\t\t},\r\n\t\tbiggify(time) {\r\n\t\t\tdestScale = 2\r\n\t\t\ttimer = time\r\n\t\t\tisBig = true\r\n\t\t},\r\n\t}\r\n}\r\n\r\nscene(\"menu\", ({ levelId, coins } = { levelId: 0, coins: 0 }) => {\r\nfunction addButton(txt, p, f) {\r\n\r\n\tconst btn = add([\r\n\t\ttext(txt),\r\n\t\tpos(p),\r\n\t\tarea({width: 200, height: 18}),\r\n\t\tscale(2),\r\n\t\torigin(\"center\"),\r\n\t])\r\n\n      add([\n    sprite(\"menubg\", { width: width(), height: height() }),\n    z(-9999),\n    fixed()\n  ]);\n\tbtn.onClick(f)\r\n\r\n\tbtn.onUpdate(() => {\r\n\t\tif (btn.isHovering()) {\r\n\t\t\tconst t = time() * 20\r\n\t\t\tbtn.color = rgb(\r\n\t\t\t\twave(0, 255, t),\r\n\t\t\t\twave(0, 255, t + 2),\r\n\t\t\t\twave(0, 255, t + 4),\r\n\t\t\t)\r\n\t\t\tbtn.scale = vec2(2)\r\n\t\t} else {\r\n\t\t\tbtn.scale = vec2(2)\r\n\t\t\tbtn.color = rgb()\r\n\t\t}\r\n\t})\r\n\r\n}\r\n\r\naddButton(\"Join-Journey\", vec2(775, 200), () => go(\"game\"))\r\nadd([\n  text(\"Production  \\n V17.7.2LNET@latest\", {\n    font: \"apl386\", \n  })]),\r\n\r\nonUpdate(() => cursor(\"default\"))\r\n\r\n})\n\n\nscene(\"pausa\", ({ levelId, coins } = { levelId: 0, coins: 0 }) => {\nfunction addButton(txt, p, f) {\n\n\tconst btn = add([\n\t\ttext(txt),\n\t\tpos(p),\n\t\tarea({width: 200, height: 18}),\n\t\tscale(2),\n\t\torigin(\"center\"),\n\t])\n\n      add([\n    sprite(\"menubg\", { width: width(), height: height() }),\n    z(-9999),\n    fixed()\n  ]);\n\tbtn.onClick(f)\n\n\tbtn.onUpdate(() => {\n\t\tif (btn.isHovering()) {\n\t\t\tconst t = time() * 20\n\t\t\tbtn.color = rgb(\n\t\t\t\twave(0, 255, t),\n\t\t\t\twave(0, 255, t + 2),\n\t\t\t\twave(0, 255, t + 4),\n\t\t\t)\n\t\t\tbtn.scale = vec2(2)\n\t\t} else {\n\t\t\tbtn.scale = vec2(2)\n\t\t\tbtn.color = rgb()\n\t\t}\n\t})\n\n}\n\naddButton(\"Resume\", vec2(775, 200), () => go(\"game\"))\nadd([\n  text(\"Production  \\n V17.7.2LNET@latest\", {\n    font: \"apl386\", \n  })]),\n\nonUpdate(() => cursor(\"default\"))\n\n})\n//Comprob\nfunction spin(speed = 1200) {\n\tlet spinning = false\n\treturn {\n\t\trequire: [ \"rotate\", ],\n\t\tupdate() {\n\t\t\tif (!spinning) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.angle -= speed * dt()\n\t\t\tif (this.angle <= -360) {\n\t\t\t\tspinning = false\n\t\t\t\tthis.angle = 0\n\t\t\t}\n\t\t},\n\t\tspin() {\n\t\t\tspinning = true\n\t\t},\n\t}\n}\n\n\r\nloadSprite(\"sam\", \"/sprites/dino.png\", {\n\nsliceX: 9,\n\nanims: {\n\tidle: {\n\t\t\tfrom: 0,\n\t\t\tto: 3,\n\t\t\tspeed: 3,\n\t\t\tloop: true,\n\t\t},\n\t\trun: {\n\t\t\tfrom: 4,\n\t\t\tto: 7,\n\t\t\tspeed: 10,\n\t\t\tloop: true,\n\t\t},\n\n\t\tjump: 8\n\t},\n})\r\nloadSprite(\"portal\", \"sprites/portal3.png\", {\n  sliceX: 4,\n  anims: {\n    idle: {\n      from: 0,\n      to: 3,\n      loop: true,\n      speed: 10\n    },\n  }\n});\r\n\nloadSprite(\"monedaa\", \"sprites/monedaa.png\", {\n  sliceX: 5,\n  anims: {\n    idle: {\n      from: 0,\n      to: 4,\n      loop: true,\n      speed: 10\n    },\n  }\n});\n\nlet BACKGROUND = \"ciudadbg\";\r\nconst JUMP_FORCE = 1320\r\nconst MOVE_SPEED = 300\r\nconst FALL_DEATH = 3010\r\n\r\nconst LEVELS = [\r\n\t[\r\n\t\t\"p                        p\",\r\n\t\t\"p                        p\",\r\n\t\t\"p                        p\",\r\n\t\t\"p                        p\",\r\n\t\t\"p                        p\",\r\n\t\t\"p      $ $               p\",\r\n\t\t\"p     $  =      $$       p\",//city\r\n\t\t\"p    $   =     ====      p\",\r\n\t\t\"p        =      <        p\",\r\n\t\t\"p  2  lf =L$$$$$$$$$$$  +p\",\r\n\t\t\"==========================\",\r\n\t],\r\n\t[\r\n\t\t\"p                         $       p\",\r\n\t\t\"p                        ===      p\",\r\n\t\t\"p                                 p\",\r\n\t\t\"p                  $              p\",  \r\n\t\t\"p                 ===    $        p\",//city\r\n\t\t\"p                       ===       p\",\r\n\t\t\"p             $              $    p\",\r\n\t\t\"p            ===     $      ===   p\",\r\n\t\t\"p       $           ===           p\",\r\n\t\t\"p?     ===                      \u00BF p\",\r\n\t\t\"======                        =====\",\r\n\t],\r\n        [\r\n    \"p                             p\",\r\n\t\t\"p                             p\",\r\n\t\t\"p                             p\",\r\n\t\t\"p                             p\",\r\n\t\t\"p                             p\",\r\n\t\t\"p                             p\",//city\r\n\t\t\"p                             p\",\r\n\t\t\"p           $$   $$   $$      p\",\r\n\t\t\"p             $    $    $     p\",\r\n\t\t\"p                             p\",\r\n\t\t\"p       ^^  ^^   ^^   ^^     @p\",\r\n\t\t\"===============================\",\r\n\t], \r\n\t[       \r\n\t\t\"p                                   \",\r\n\t\t\"p                                   \",\r\n\t\t\"p                                   \",\r\n\t\t\"p                                   \",\r\n\t\t\"p                               @   \",\r\n\t\t\"p                             ====  \",\r\n\t\t\"p    $  =             =>=           \",\r\n\t\t\"p    $  =            ====           \",//city\r\n\t\t\"p    $  =                           \",\r\n\t\t\"p    $  =                           \",\r\n\t\t\"p    >  =     =>=                   \",\r\n\t\t\"=================                   \",\r\n\t ],\n   [\n    \"p                                      p\",\n\t\t\"p                                      p\",\n\t\t\"p                                      p\",\n\t\t\"p                                      p\",\n\t\t\"p                                 @    p\",\n\t\t\"p                              =====   p\",\n    \"p                                      p\",\n    \"p                                      p\",\n\t\t\"p              =\u00A1         =            p\",\n    \"p                                      p\",\n    \"p                                      p\",//city\n\t\t\"p                                      p\",\n\t\t\"p        ====                          p\",\n    \"p                                      p\",\n\t\t\"p                                      p\",\n\t\t\"========================================\",\n   ],\n   [\n  \n    \"                        \",\n    \"          @             \",\n    \"         =======        \",\n    \"                  ===   \",\n    \"                        \",\n    \"                        \",\n    \"                        \",\n    \"                  ===!  \",\n    \"                        \",\n    \"======!                 \",\n    \"                        \",//spawn\n    \"                        \",\n    \"       =\u00A1       =!      \",\n    \"                        \",\n    \"                         \",\n   ],\r\n\t [\n\t\t\"                                                                        \",\n\t\t\"                    $ $ $ $ $ $               $                         \",\r\n\t\t\"                   $   $   $   $             ===                        \",\r\n\t\t\"                                        $                    @          \",\r\n\t\t\"                                       ===           $     ====         \",\r\n\t\t\"                  =>^^^>^^^>^^^                     ===                 \",\r\n\t\t\"               ===================                                      \",\r\n\t\t\"                                                                        \",  \r\n\t\t\"                                                                        \",\r\n\t\t\"      =>=                                                               \",\n    \"      ====    $                                     $$$$$$              \",\r\n\t  \"             $ $                                   ========             \", \r\n\t\t\"                        $                   $                           \",\r\n\t\t\"             ^^^       ===                 ===                          \",\r\n\t\t\"           =======             $  $                                     \",      \t\n    \"                             ========                                   \",\r\n\t\t\"                                                                        \",  \r\n\t\t\"                                                              =>=       \",//city\r\n\t\t\"                                                      $      ====       \", \r\n\t\t\"                                                                        \", \r\n\t\t\"                                                      ^                 \",\r\n\t\t\"                                             $      =====               \",  \r\n\t\t\"                                                                        \",\r\n\t\t\"                         $    $    $         ^                          \",\r\n\t\t\"                                           =====                        \",         \n    \"                                                                        \",\r\n\t\t\"                        ^^^  ^^^  ^^^                                   \",\r\n\t\t\"============     \u00A1     ================                                 \",\r\n\t],\n\t[\n    \"w                                      \",\n    \"w                                      \",\n    \"w           @                          \",\n\t\t\"w   ===========                        \",\n    \"w                                      \", \t\n    \"w                                      \",\n    \"w                                      \",\n\t\t\"w          ===============             \",\n\t\t\"w                                      \",\n    \"w                                      \",\n    \"w                                      \",\n    \"w                                      \", // bosque fuera\n\t\t\"w                       =======        \",\n\t\t\"w      =======                         \",\n\t\t\"w                                      \",\n\t\t\"w                                      \",\n\t\t\"w   2             2                2   \",\n\t\t\"w                                     @\",\n\t\t\"=======================================\",\n    \"                                       \",\n    \"                                       \",\n    \"                                       \",\n], \n[\n  \"                         \",\n  \"                         \",\n  \"                         \",\n  \"                         \",\n  \"                         \",// bosque fuera\n  \"                       @ \",\n  \"                   ======\",\n  \"   l    = f  =           \",//spawn\n  \"================         \",\n  \"                         \",\n  \"                         \",\n  \"                         \",\n  \"                         \",\n],\n[\n  \"                         \",\n  \"                         \",\n  \"                         \",\n  \"            @            \",\n  \"          ====           \",//spawn\n  \"                         \",\n  \"    = f =                \",//bosque dentro\n  \"    =====                \",\n  \"                         \",\n  \"===                      \",\n  \"                         \",\n  \"                         \",\n  \"                         \",\n  \"                         \",\n],\n[\n  \"                        \",\n  \"                        \",\n  \"    @                   \",\n  \"   ======               \",\n  \"          =======       \",\n  \"                        \",\n  \"                        \",\n  \"                  ====  \",//bosque fuera\n  \"                        \",\n  \"      = f  f  f =       \",\n  \"      ===========       \",\n  \"                        \",\n  \"====                    \",\n],\n[\n  \"                                               \",\n  \"                                               \",\n  \"      ====                                     \",\n  \"                                             @ \",\n  \"           = f    =                        ====\",\n  \"           ========                            \",\n  \"                                               \",\n  \"                                               \",  // bosque dentro\n  \"                       =          =====        \",\n  \"                      ===                      \",\n  \"                                               \",\n  \"                                               \",\n  \"                           = f f =             \",\n  \"       =============       =======             \",\n  \" ===                                           \",\n  \"                                               \",\n],\n[\n  \"                             \",\n  \"                             \",\n  \"          @                  \",\n  \"         ======              \",\n  \"                  b          \",\n  \"                 =====       \",//b=other enemy\n  \"                             \",\n  \"                             \",\n  \"                       ====  \",\n  \"                             \",\n  \"               ======        \",\n  \"           b=                \",\n  \"=============                \"\n],\n[\n  \"            @           \",\n  \"                     @  \",\n  \"     G             ==== \",\n  \"    ====                \",\n  \"              ====      \",\n  \"                        \",//G=\"checkpoint\"\n  \"           L            \",\n  \"        =====           \",\n  \"                        \",\n  \"                     @  \",\n  \"     b             ==== \",\n  \"    =====               \",\n  \"            =  f =      \",\n  \"            ======      \",\n  \"                        \",\n  \"     =====              \",\n  \"                        \",\n  \"====                    \",\n  ],\n  [\n    \"   @          ^              \",\n    \"   pppp       ppp     ppppp  \",\n    \"       pppp   <p<     <ppp   \",\n    \"                        p<   \",\n    \"                            p\",\n    \"                            <\",\n    \"         ^                   \",\n    \"       ppp           ^^      \",\n    \"        p    ^     pppp    p \",//ruinas\n    \"        <  ppppp    pp<    < \",\n    \"      ^    <ppp<    <p       \",\n    \"    rpp     <p          pp   \",\n    \"     r<                  p   \",\n    \"     <                   <   \",\n    \"rrrr                         \",\n  ],\n  [\n    \"        ppp  ^  ^                             \",\n    \"        <p ppppppp      ^^^  p             ^ @\",\n    \"            <ppp<       ppp  <   pp      ppppp\",\n    \"  ppppp                  <        p    <  ppp<\",\n    \"   ppp<             ppp           <  ppp  <p  \",\n    \"   <p   ppp          p<p    pp        p    <  \",\n    \"         p<          <      <                 \",\n    \"                                              \",\n    \"                                              \",\n    \"            ppp                               \",\n    \"            <p                                \",\n     \"                 p    ^    pp                \",//ruinas\n    \"           ^         pppp                     \",\n    \"pppp     pppp          p  p                   \",\n  ],\n  [\n        \"                 ^^^^       \",\n        \"                 pppp       \",\n        \"                            \",\n        \"        ppp            @    \",\n        \"        <p<     p^^^^ppp    \",\n        \"      ^^ <  ppp  pppp       \",\n        \"   ppppp                    \",\n        \"                            \",\n        \" ppp   pp                   \",\n        \"       <p                   \",\n        \"                 pppppppp   \",//ruinas\n        \"            ^    p pppp p   \",\n        \"         ppppp    pppppp    \",\n        \"         <ppp               \",\n        \"          <p<    pp^^^^pp   \",\n        \"           <  pp   pppp     \",\n        \"               <            \",\n        \"                          pp\",\n        \"                            \",\n        \"    ^^^^^^                  \",\n        \"    pppppp    ppp ^^  ^^    \",\n        \"      <<      <p<ppppppppp  \",\n        \"           ^   <            \",\n        \"ppppp    ppppp              \",\n  ],\n  [\n    \"         @               ^         \",\n    \"         p               p         \",\n    \"         p              ^p^        \",\n    \"        ppp             ppp        \",//ruinas\n    \"        ppp             ppp        \",\n    \"       ppppp      p  pppppppp  pp  \", \n    \"        ppp       p      p      p  \",\n    \"         <        p     ^p^    ^p  \",\n    \"                  ppp  pppp   ppp  \",\n    \"                                   \",\n    \"                                ^  \",\n    \"       ^  ^       ppppp  pppppppp  \",\n    \"     ppppppppp                  p  \",\n    \"                              ^^p  \",\n    \"   ppppp    pp    ppppppp    ppppp \",\n    \"    ppp                  p  p    p \",   \n    \"     <                           p \",\n    \"                                 p \",\n    \"  p               p              p \", \n    \"                  pppppppppppppppp \",\n    \"                      p<   <   <   \",\n    \"   ^              ppppp            \",\n    \"   ppp                             \",             \n    \"   pp                              \",\n    \"                                   \",\n    \"                                   \",\n    \"      ppp      pppppppppp    p    p\",\n    \"      <p<                          \",\n    \"              ^^^^^^^^^^^^^^^^^^^^^\",\n    \"ppppp     ppppppppppppppppppppppppp\",\n  ],\n  [\n    \"                                                    ppp     \",\n    \"                                            ^             ^ \",\n    \"                               p   p        p    ppp    ppp \", \n    \"          ^                          p     p      p         \",\n    \"        ppp            ^ ^  p         ppppp  ppp            \",\n    \"         p             p p              p     p             \",\n    \"            p      p   < <                                 @\",\n    \"            <      <                                      ^ \",\n    \"  p                   p^^^p                              ppp\",\n    \"                      <ppp<     p      p             ^      \",\n    \"          ^ ^                   <      <            ppp     \",  //ruinas\n    \"        ppppp           ppppppp           ^^  ^^            \",  \n    \"         ppp< ^ ^^^pp                    ppppppppp          \",   \n    \"          p   ppppp   ppp    ppp                            \", \n    \"ppp       <    ppp<                                         \",  \n  ],\n  [\n    \"          p  ^       \",\n    \"  pp^pp   pppp       \",\n    \"   ppp    ppp        \",\n    \"    p     pp         \",\n    \"        ppp   pp     \",\n    \"         ppp p       \",\n    \"     ^    pp p ^^^^^^\",\n    \"   ppppp  pp p pppppp\",\n    \"   p p p  pp p  <pp< \",\n    \"  ppp pp  p          \",\n    \"          p^         \",//ruinas\n    \"          ppp        \",\n    \" p        p  p       \",\n    \"          p   p^^^p  \",\n    \"  ^^      p    ppp   \",\n    \" pppppp   p    <<<   \",\n    \" ppppp    p          \",\n    \" ppp     ^p ppp   ppp\",\n    \" pp     ppp pp     p \",\n    \" p       pp p        \", \n    \"        ^ p p        \", \n    \"      ppp p p        \",\n    \"       p  p p        \",   \n    \"     ^    p p        \",\n    \"   ppp    p p        \",\n    \"          p p        \",\n    \" ^        p p        \",\n    \" ppp      p p        \",\n    \"  p       p p   ppp  \",\n    \"          p      p   \", \n    \"     ppp  p      p   \",\n    \"          p    p p   \",\n    \"          p    p p   \",\n    \"  pp      p    p p   \",\n    \"   p     ^p  ppp p   \",\n    \"  ppp  pppp  p p p   \",\n    \"          p ^p p^p^@^\",\n    \"ppppppppppppppppppppp\",\n  ],\n  [\n    \" pppp ppp ppp p  ppp p  p pp  \",\n    \"   p  p p  p  p  p p pp p p p \",\n    \"  p   ppp  p  p  ppp p pp p p \",\n    \" pppp p p ppp pp p p p  p pp  \",\n    \"                         ^    \",\n    \"                         p  pp\",\n    \"    pp^^  ^            p p    \",\n    \"    pppppppppppppppppppp p^   \",\n    \"                       p ppp  \",//ruinas\n    \" p                     p pp   \",\n    \"            ppp        p p   ^\",\n    \"     pppp    p         p p  pp\",\n    \"         p    ^        p p  <p\",\n    \"              pp       p p^   \",\n    \"                       p ppp  \", \n    \"     ^            ^    p      \",\n    \"   ppp           pp    p     ^\",\n    \"    p                  p    pp\",\n    \"    <                  p      \",\n    \"ppp   pp      pp       p ^    \",\n    \"                       ppppppp\", \n  ],\n  ]\nconst levelConf = {\r\n\twidth: 64,\r\n\theight: 64,\r\n\t\"=\": () => [\r\n\t\tsprite(\"grass\"),\r\n\t\tarea(),\r\n\t\tsolid(),\r\n\t\torigin(\"bot\"),\r\n  ],\n  \"\u00A1\": () => [\n\t\tsprite(\"grass\"),\n\t\tarea(),\n\t\tsolid(),\n    block(),\n\t\torigin(\"bot\"),\n  ],\n  \"!\": () => [\n\t\tsprite(\"grass\"),\n\t\tarea(),\n\t\tsolid(),\n    block(),\n\t\torigin(\"bot\"),\n  ],\n  \"w\": () => [\n\t\tsprite(\"wood\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n  ],\n  \"M\": () => [\n\t\tsprite(\"mountain\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n  ],\n  \"r\": () => [\n\t\tsprite(\"Ruins\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n  ],\n\t\t\"p\": () => [\n\t\tsprite(\"piedra\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n ],\n\t\t\"m\": () => [\n\t\tsprite(\"mafe\"),\n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\r\n\t],\n\"L\": () => [\n\t\tsprite(\"letrero\"),\n\t\tarea({width: 40, height: 40}),\n\t\tsolid(),\n    scale(1.5),\n\t\torigin(\"bot\"),\n\t],\n\t\"v\": () => [\n\t\tsprite(\"valeuwu\"),\n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\n\t],\n\n\t\"l\": () => [\n\t\tsprite(\"developer\"),\n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\n\t],\n\t\"s\": () => [\n\t\tsprite(\"silvi\"), \n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\n\t],\n\t\"c\": () => [\n\t\tsprite(\"casti\"),\n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\n\t],\n\t\"9\": () => [\n\t\tsprite(\"pavo\"),\n\t\tarea({width: 15, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n    human(),\n\t\torigin(\"bot\"),\n\t],\n  \"3\": () => [\n\t\tsprite(\"mateo\"),\n\t\tarea({width: 11, height: 16}),\n\t\tsolid(),\n    scale(2.1),\n\t\torigin(\"bot\"),\n\t],\r\n\t\"$\": () => [\r\n\t\tsprite(\"monedaa\", { anim: 'idle' }),\r\n\t\tarea(),\r\n\t\tpos(0, -9),\n    scale(3),\r\n\t\torigin(\"bot\"),\r\n\t\t\"coin\",\r\n\t],\n\"2\": () => [\n\t\tsprite(\"gem\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"gem\",\n\t],\n  \"6\": () => [\n\t\tsprite(\"gemp1\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"gem\",\n\t],\n  \"7\": () => [\n\t\tsprite(\"gemp2\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"gem\",\n\t],\n  \"4\": () => [\n\t\tsprite(\"gemp3\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"gem\",\n\t],\n  \"5\": () => [\n\t\tsprite(\"gemp4\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"gem\",\n\t],\r\n\t\"%\": () => [\r\n\t\tsprite(\"prize\"),\r\n\t\tarea(),\r\n\t\tsolid(),\r\n\t\torigin(\"bot\"),\r\n\t\t\"prize\",\r\n\t],\r\n\t\"^\": () => [\r\n\t\tsprite(\"spike\"),\r\n\t\tarea(),\r\n\t\tsolid(),\r\n\t\torigin(\"bot\"),\r\n\t\t\"danger\",\r\n\t\t],\r\n\t\"<\": () => [\r\n\t\tsprite(\"spikevoltiado\"),\r\n\t\tarea({width: 35, height: 20}),\n    pos(0, -40),\n\t\torigin(\"bot\"),\r\n\t\t\"danger\",\r\n\t],\r\n\t\"#\": () => [\r\n\t\tsprite(\"apple\"),\r\n\t\tarea(),\r\n\t\torigin(\"bot\"),\r\n\t\tbody(),\r\n\t\t\"apple\",\r\n\t],\r\n\t\">\": () => [\r\n\t\tsprite(\"ghosty\"),\n\t\tarea(),\r\n\t\torigin(\"bot\"),\r\n\t\tbody(),\r\n\t\tpatrol(),\r\n\t\t\"enemy\",\r\n\t],\n  \"f\": () => [\n\t\tsprite(\"forest1\"),\n\t\tarea(),\n\t\torigin(\"bot\"),\n\t\tbody(),\n    scale(0.5),\n\t\tpatrol(),\n\t\t\"enemy\",\n\t],\r\n\t\"@\": () => [\r\n\t\tsprite(\"portal\", { anim: 'idle' }),\r\n\t\tarea({width: 64, height: 64}),\r\n\t\torigin(\"bot\"),\r\n\t\tpos(0, -12),\r\n\t\t\"portal\",\r\n\t],\n  \"+\": () => [\n\t\tsprite(\"portal\", { anim: 'idle' }),\n\t\tarea({width: 64, height: 64}),\n\t\torigin(\"bot\"),\n\t\tpos(0, -12),\n\t\t\"popocine1\",\n\t],\n  \"\u00BF\": () => [\n\t\tsprite(\"portal\", { anim: 'idle' }),\n\t\tarea({width: 64, height: 64}),\n\t\torigin(\"bot\"),\n\t\tpos(0, -12),\n\t\t\"popopocine2\",\n\t],\n  \t\"?\": () => [\n\t\tsprite(\"portal\", { anim: 'idle' }),\n\t\tarea({width: 64, height: 64}),\n\t\torigin(\"bot\"),\n\t\tpos(0, -12),\n\t\t\"otroportal\",\n\t],\r\n}\r\n\r\n\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nscene(\"game\", ({ levelId, coins, anims } = { levelId: 0, coins: 0 }) => {\r\ngravity(3200)\r\n\r\n\r\n\tconst level = addLevel(LEVELS[levelId ?? 0], levelConf)\r\n\r\nlet myCheckpoint = vec2(177, 179)\nlet myCheckpointfix = vec2(140, 116)\n\n\n    add([\n    sprite(BACKGROUND, { width: width(), height: height() }),\n    z(-9999),\n    fixed()\n  ]);\r\nconst player = add([\n\tsprite(\"sam\", { anim: 'idle' }),\n\tpos(80, 180),\n\torigin(\"center\"),\n\tarea({width: 10, height: 20}),\n\tbody({ jumpForce: JUMP_FORCE, }),\n  scale(22),\n  big(),\n  rotate(0),\n\tspin(),\n\torigin(\"bot\"),\n])\r\n\r\nplayer.onUpdate(() => {\r\n     if(player.pos.x > 210) { \r\n         myCheckpointfix = vec2(140, 116);\r\n     }\r\n})\r\n\r\n\r\n\r\nplayer.onGround(() => {\r\n\tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n\t\tplayer.play(\"idle\")\r\n\t} else {\r\n\t\tplayer.play(\"run\")\r\n\t}\r\n})\r\n\tplayer.onDoubleJump(() => {\n\t\tplayer.spin()\n\t})\r\n\r\n\r\nonKeyPress(\"space\", () => {\r\n\tif (player.isGrounded()) {\n    player.doubleJump()\r\n\t\tplayer.jump(JUMP_FORCE)\r\n    player.biggify(3)\r\n\t\tplayer.play(\"jump\")\r\n\t}\r\n})\r\n\t\r\n\tonKeyPress(\"up\", () => {\r\n\tif (player.isGrounded()) {\r\n\t\tplayer.jump(JUMP_FORCE)\r\n    player.biggify(4)\r\n\t\tplayer.play(\"jump\")\r\n\t}\r\n})\r\n\r\nonKeyDown(\"left\", () => {\r\n\tplayer.move(-MOVE_SPEED, 0)\r\n\tplayer.flipX(true)\r\n  player.biggify(5)\r\n\tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n\t\tplayer.play(\"run\")\r\n\t}\r\n})\r\n\r\nonKeyDown(\"right\", () => {\r\n\tplayer.move(MOVE_SPEED, 0)\r\n\tplayer.flipX(false)\r\n  player.biggify(5)\r\n\tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n\t\tplayer.play(\"run\")\r\n\t}\r\n})\r\n\r\nonKeyRelease([\"left\", \"right\"], () => {\r\n\tif (player.isGrounded() && !isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\nplayer.play(\"idle\")\r\n\t}\r\n})\r\n\r\n\r\n\tplayer.onUpdate(() => {\r\n\r\n\t\tcamPos(player.pos)\r\n\r\n\t\tif (player.pos.y >= FALL_DEATH) {\r\n\t\t\tplayer.pos = myCheckpoint;\r\n\t\t}\r\n\t})\r\n\r\n\tplayer.onCollide(\"danger\", () => {\r\n\t\tplayer.pos = myCheckpoint;\r\n\t\tplay(\"hit\")\r\n\t})\r\n\r\n\tplayer.onCollide(\"portal\", async () => {\r\n\t\tplay(\"portal\")\r\n\t\t//location.href = \"https://luisweb.cf/pege/cinematic\"\n    await wait(1)\r\n\t\tif (levelId + 1 < LEVELS.length) {\r\n\t\t\tgo(\"game\", {\r\n\t\t\t\tlevelId: levelId + 1,\r\n\t\t\t\tcoins: coins,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tgo(\"win\")\r\n\t\t}\n      if (levelId < 6) {\n        BACKGROUND = \"ciudadbg\"\n      }\n     if (levelId == 6) {\n        BACKGROUND = \"bfuerabg\"\n      }\n     if (levelId == 7) {\n        BACKGROUND = \"bfuerabg\"\n      }\n      if (levelId == 8) {\n        BACKGROUND = \"forestbg\"\n      }\n      if (levelId == 9) {\n        BACKGROUND = \"bfuerabg\"\n      }\n    })\n\tplayer.onCollide(\"popocine1\", async () => {\n\t\tplay(\"portal\")\n\t\tlocation.href = \"https://luisweb.cf/pege/cinematic\"\n    await wait(1)\n\t\tif (levelId + 1 < LEVELS.length) {\n\t\t\tgo(\"game\", {\n\t\t\t\tlevelId: levelId + 1,\n\t\t\t\tcoins: coins,\n\t\t\t})\n\t\t} else {\n\t\t\tgo(\"win\")\n\t\t}\n      if (levelId < 6) {\n        BACKGROUND = \"ciudadbg\"\n      }\n     if (levelId == 6) {\n        BACKGROUND = \"bfuerabg\"\n      }\n     if (levelId == 7) {\n        BACKGROUND = \"bfuerabg\"\n      }\n      if (levelId == 8) {\n        BACKGROUND = \"forestbg\"\n      }\n      if (levelId == 9) {\n        BACKGROUND = \"bfuerabg\"\n      }\n    })\n\tplayer.onCollide(\"popopocine2\", async () => {\n\t\tplay(\"portal\")\n\t\tlocation.href = \"https://luisweb.cf/pege/cinematic\"\n    await wait(1)\n\t\tif (levelId + 1 < LEVELS.length) {\n\t\t\tgo(\"game\", {\n\t\t\t\tlevelId: levelId + 1,\n\t\t\t\tcoins: coins,\n\t\t\t})\n\t\t} else {\n\t\t\tgo(\"win\")\n\t\t}\n      if (levelId < 6) {\n        BACKGROUND = \"ciudadbg\"\n      }\n     if (levelId == 6) {\n        BACKGROUND = \"bfuerabg\"\n      }\n     if (levelId == 7) {\n        BACKGROUND = \"bfuerabg\"\n      }\n      if (levelId == 8) {\n        BACKGROUND = \"forestbg\"\n      }\n      if (levelId == 9) {\n        BACKGROUND = \"bfuerabg\"\n      }\n    })\n\n  player.onCollide(\"otroportal\", async () => {\n\t\tplay(\"portal\")\n\t\t//location.href = \"https://luisweb.cf/pege/cinematic\"\n    await wait(1)\n\t\tif (levelId - 1 < LEVELS.length) {\n\t\t\tgo(\"game\", {\n\t\t\t\tlevelId: levelId - 1,\n\t\t\t\tcoins: coins,\n\t\t\t})\n\t\t} else {\n\t\t\tgo(\"win\")\n\t\t}\n    if (levelId == 2) {\n        BACKGROUND = \"forestbg\"\n      } \n     if (levelId == 3) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 4) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 5) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 6) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 7) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 8) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 9) {\n        BACKGROUND = \"ruinasbg\"\n      }\n     if (levelId == 10) {\n        BACKGROUND = \"ruinasbg\"\n      }\n    })\n\r\n\r\n\tplayer.onGround((l) => {\r\n\t\tif (l.is(\"enemy\")) {\r\n\t\t\tplayer.jump(JUMP_FORCE * 1.5)\r\n\t\t\tplay(\"powerup\")\r\n\t\t}\r\n\t})\r\n\r\nplayer.onCollide(\"player\", \"enemy\", (p, e) => {\r\n    player.pos = myCheckpoint;\r\n})\r\n\n\r\n\tplayer.onCollide(\"enemy\", (e, col) => {\r\nif (!col.isBottom()) {\r\n\t\t\tplay(\"hit\")\r\n      player.pos = myCheckpoint;\r\n\t\t}\r\n\t})\r\n\r\n\tlet hasApple = false\r\n\r\n\r\n\tplayer.onHeadbutt((obj) => {\r\n\t\tif (obj.is(\"prize\") && !hasApple) {\r\n\t\t\tconst apple = level.spawn(\"#\", obj.gridPos.sub(0, 1))\r\n\t\t\tapple.jump()\r\n\t\t\thasApple = true\r\n\t\t\tplay(\"blip\")\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tplayer.onCollide(\"apple\", (a) => {\r\n\t\tdestroy(a)\r\n\r\n\t\tplayer.biggify(5)\r\n\t\thasApple = false\r\n\t\tplay(\"powerup\")\r\n\t})\r\n\r\n\tlet coinPitch = 0\r\n\r\n\tonUpdate(() => {\r\n\t\tif (coinPitch > 0) {\r\n\t\t\tcoinPitch = Math.max(0, coinPitch - dt() * 100)\r\n\t\t}\r\n\t})\r\n\r\n\tplayer.onCollide(\"coin\", (c) => {\r\n\t\tdestroy(c)\r\n    player.biggify(5)\r\n\t\tplay(\"coin\", {\r\n\t\t\tdetune: coinPitch,\r\n\t\t})\r\n\t\tcoinPitch += 100\r\n\t\tcoins += 1\r\n\t\tcoinsLabel.text = coins\r\n\t})\r\n\nplayer.onCollide(\"gem\", (c, p) => {\n\tplayer.move(100)\n  destroy(c, p)\n  play(\"yei\")\n  player.jump(JUMP_FORCE * 1.2)\n\t})\n\n  \r\n\tconst coinsLabel = add([\r\n\t\ttext(coins),\r\n\t\tpos(24, 24),\r\n\t\tfixed(),\r\n\t])\r\n\r\n\r\n\tonKeyPress(\"space\", () => {\r\n\r\n\t\tif (player.isGrounded()) {\r\n\t\t\tplayer.jump(JUMP_FORCE)\n      player.doubleJump()\r\n      player.biggify(5)\r\n\t\t}\r\n\t})\r\n\r\n\tonKeyDown(\"left\", () => {\r\n\t\tplayer.move(-MOVE_SPEED, 0)\r\n    player.biggify(5)\r\n\t})\r\n\r\n\tonKeyDown(\"right\", () => {\r\n\t\tplayer.move(MOVE_SPEED, 0)\r\n    player.biggify(5)\r\n\t})\r\n\r\n\tonKeyPress(\"down\", () => {\r\n\t\tplayer.weight = 3\r\n    \r\n\t})\r\n\r\n\tonKeyRelease(\"down\", () => {\r\n\t\tplayer.weight = 1\r\n    //player.pos = myCheckpoint;\r\n\t\t//fixed spawnpoint on Key release\r\n\t})\r\n\r\n\tonKeyPress(\"f\", () => {\r\n\t\tfullscreen(!fullscreen())\r\n\t})\n\n  \tonKeyPress(\"escape\", () => {\n\t\tgo(\"pausa\")\n\t})\r\n\t\tonKeyPress(\"f8\", () => {\r\n\t\tadd([\r\n\t\t\ttext(\"tramposo - 0.5\")\r\n\t\t\t])\r\n\t\t\t\r\n\t})\r\n\t keyDown(\"o\", () => {\n    wait(0.2, () => {\n      if (levelId + 1 < LEVELS.length) {\n        go(\"game\", {\n          levelId: levelId - 1,\n        });\n      } else {\n        go(\"win\");\n      }\n      if (levelId == 2) {\n        BACKGROUND = \"icebg\"\n      } else {\n        BACKGROUND = \"ruinasbg\"\n      }\n    })\n  });\r\n\t\t\tonKeyPress(\"p\", () => {\n        fullscreen(!fullscreen())\r\n\t\tif (levelId + 1 < LEVELS.length) {\n\t\t\tgo(\"game\", {\n\t\t\t\tlevelId: levelId + 1,\n\t\t\t\tcoins: coins,\n\t\t\t})\n\t\t}\r\n\t\t\t\r\n\t})\n                  \r\n})\r\n\r\nscene(\"lose\", () => {\r\n\tadd([\r\n\t\ttext(\"NOT USED, HOWEVER DEVELOPERS KNOW WHAT THEY DO ;)\"),\r\n\t])\r\n\tonKeyRelease(() => {\r\n    go(\"game\")\r\n\t})\r\n})\r\n\r\nscene(\"win\", () => {\r\n\tadd([\r\n\t\ttext(\"DEVOPS\"),\r\n\t])\r\n\tonKeyPress(() => go(\"game\"))\r\n})\r\n\r\ngo(\"menu\")"],
  "mappings": "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CA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACE;AAAA,UACD;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,UACE;AAAA,UACF;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACE;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACG;AAAA,UACA;AAAA,UACA;AAAA,UACF;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACF;AAAA,UACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACF;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACA;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACC;AAAA,UACD;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACM;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACN;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UA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",
  "names": ["z", "dt", "time", "f", "a"]
}
